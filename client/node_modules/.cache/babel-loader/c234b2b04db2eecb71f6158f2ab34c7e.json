{"ast":null,"code":"import axios from 'axios';\nimport { TODO_LIST_FAIL, TODO_LIST_REQUEST, TODO_LIST_SUCCESS, TODO_DETAILS_REQUEST, TODO_DETAILS_SUCCESS, TODO_ADD_REQUEST, TODO_ADD_SUCCESS, TODO_DETAILS_FAIL, TODO_ADD_FAIL, TODO_DELETE_REQUEST, TODO_DELETE_FAIL, TODO_DELETE_SUCCESS, TODO_UPDATE_TIME_REQUEST, TODO_UPDATE_TIME_SUCCESS, TODO_UPDATE_TIME_FAIL, TODO_UPDATE_REQUEST, TODO_UPDATE_FAIL, TODO_UPDATE_SUCCESS } from '../constants/todoConstants';\nexport const listTodo = () => async (dispatch, getState) => {\n  dispatch({\n    type: TODO_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get('/grouptodo', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: TODO_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TODO_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const addItem = () => async (dispatch, getState) => {\n  dispatch({\n    type: TODO_ADD_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.post('/grouptodo', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: TODO_ADD_SUCCESS,\n      payload: data.item\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TODO_ADD_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteItem = itemId => async (dispatch, getState) => {\n  dispatch({\n    type: TODO_DELETE_REQUEST,\n    payload: itemId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.delete(`/grouptodo/${itemId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: TODO_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TODO_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateItemTime = item => async (dispatch, getState) => {\n  dispatch({\n    type: TODO_UPDATE_TIME_REQUEST,\n    payload: item\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/grouptodo/${item._id}`, item, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: TODO_UPDATE_TIME_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TODO_UPDATE_TIME_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsItem = itemId => async dispatch => {\n  dispatch({\n    type: TODO_DETAILS_REQUEST,\n    payload: itemId\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(`/grouptodo/${itemId}/`);\n    dispatch({\n      type: TODO_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TODO_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateItem = item => async (dispatch, getState) => {\n  dispatch({\n    type: TODO_UPDATE_REQUEST,\n    payload: item\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/grouptodo/${item._id}/edit`, item, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: TODO_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TODO_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/HomeUtils/client/src/actions/todoActions.js"],"names":["axios","TODO_LIST_FAIL","TODO_LIST_REQUEST","TODO_LIST_SUCCESS","TODO_DETAILS_REQUEST","TODO_DETAILS_SUCCESS","TODO_ADD_REQUEST","TODO_ADD_SUCCESS","TODO_DETAILS_FAIL","TODO_ADD_FAIL","TODO_DELETE_REQUEST","TODO_DELETE_FAIL","TODO_DELETE_SUCCESS","TODO_UPDATE_TIME_REQUEST","TODO_UPDATE_TIME_SUCCESS","TODO_UPDATE_TIME_FAIL","TODO_UPDATE_REQUEST","TODO_UPDATE_FAIL","TODO_UPDATE_SUCCESS","listTodo","dispatch","getState","type","userSignin","userInfo","data","get","headers","Authorization","token","payload","error","message","response","addItem","post","item","deleteItem","itemId","delete","updateItemTime","put","_id","detailsItem","updateItem"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { TODO_LIST_FAIL, TODO_LIST_REQUEST, TODO_LIST_SUCCESS, TODO_DETAILS_REQUEST, TODO_DETAILS_SUCCESS, TODO_ADD_REQUEST, TODO_ADD_SUCCESS, TODO_DETAILS_FAIL, TODO_ADD_FAIL, TODO_DELETE_REQUEST, TODO_DELETE_FAIL, TODO_DELETE_SUCCESS, TODO_UPDATE_TIME_REQUEST, TODO_UPDATE_TIME_SUCCESS, TODO_UPDATE_TIME_FAIL, TODO_UPDATE_REQUEST, TODO_UPDATE_FAIL, TODO_UPDATE_SUCCESS } from '../constants/todoConstants';\r\n\r\nexport const listTodo = () => async(dispatch, getState) => {\r\n    dispatch({type: TODO_LIST_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.get('/grouptodo', {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: TODO_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: TODO_LIST_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const addItem = () => async(dispatch, getState) => {\r\n    dispatch({type: TODO_ADD_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.post('/grouptodo', {}, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: TODO_ADD_SUCCESS, payload: data.item});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: TODO_ADD_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const deleteItem = (itemId) => async(dispatch, getState) => {\r\n    dispatch({type: TODO_DELETE_REQUEST, payload: itemId});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.delete(`/grouptodo/${itemId}`, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: TODO_DELETE_SUCCESS, payload: data})\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: TODO_DELETE_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const updateItemTime = (item) => async(dispatch, getState) => {\r\n    dispatch({type: TODO_UPDATE_TIME_REQUEST, payload: item});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.put(`/grouptodo/${item._id}`, item, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: TODO_UPDATE_TIME_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: TODO_UPDATE_TIME_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const detailsItem = (itemId) => async(dispatch) => {\r\n    dispatch({type: TODO_DETAILS_REQUEST, payload: itemId});\r\n\r\n    try {\r\n        const {data} = await axios.get(`/grouptodo/${itemId}/`);\r\n        dispatch({type: TODO_DETAILS_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: TODO_DETAILS_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const updateItem = (item) => async(dispatch, getState) => {\r\n    dispatch({type: TODO_UPDATE_REQUEST, payload: item});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.put(`/grouptodo/${item._id}/edit`, item, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: TODO_UPDATE_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: TODO_UPDATE_FAIL, payload: message});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}