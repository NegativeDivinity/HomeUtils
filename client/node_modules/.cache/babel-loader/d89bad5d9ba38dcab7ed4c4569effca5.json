{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\Directions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { FaTrash } from 'react-icons/fa';\nimport { RiAddLine } from 'react-icons/ri';\nimport { GrUpdate } from 'react-icons/gr'; // Component Imports\n\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useNavigate, useParams } from 'react-router';\nimport { addDirection, deleteDirection, detailsRecipe, updateDirection } from '../actions/recipeActions';\nimport { ADD_DIRECTION_RESET, DELETE_DIRECTION_RESET } from '../constants/recipeConstants';\nimport DirectionCards from '../components/DirectionCards';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-top: 2%;\n\n    h1 {\n        font-size: 40px;\n        color: white;\n        text-align: center;\n    }\n\n    h3 {\n        color: white;\n        margin-left: 25%;\n        font-size: 30px;\n    }\n    \n`;\n_c = PageWrapper;\nconst Add = styled.button`\n    width: 10%;\n    margin: 0 0 1% 25%;\n    border: solid black 2px;\n    border-radius: 10px;\n    cursor: pointer;\n    outline: none;\n    background-color: green;\n    padding: 5px;\n\n    &:hover .add {\n        transform: scale(1.1);\n        transition: transform ease-in-out 1s;\n    }\n`;\n_c2 = Add;\nconst Update = styled.button`\n    margin-left: 20px;\n    border: solid black 2px;\n    border-radius: 10px;\n    cursor: pointer;\n    outline: none;\n    background-color: green;\n`;\n_c3 = Update;\nconst DirectionRow = styled.div`\n    display: flex;\n    margin-bottom: 2%;\n`;\n_c4 = DirectionRow;\nconst Delete = styled.button`\n    margin-left: 20px;\n    border: solid black 2px;\n    border-radius: 10px;\n    background-color: red;\n    cursor: pointer;\n    outline: none;\n`;\n_c5 = Delete;\nconst DirectionCard = styled.textarea`\n    display: flex;\n    justify-content: space-between;\n    width: 50%;\n    margin-left: 25%;\n    border: solid black 2px;\n    border-radius: 10px;\n    font-size: 20px;\n    color: white;\n    background-color: rgb(73, 73, 77);\n    resize: none;\n    padding: 10px;\n    height: ${props => props.height || '100px'};\n    outline: none;\n`;\n_c6 = DirectionCard;\nexport default function Directions() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [task, setTask] = useState('');\n  const [height, setHeight] = useState('');\n  const recipeDetails = useSelector(state => state.recipeDetails);\n  const {\n    loading,\n    error,\n    recipe\n  } = recipeDetails;\n  const directionAdd = useSelector(state => state.directionAdd);\n  const {\n    success: successAdd\n  } = directionAdd;\n  const directionDelete = useSelector(state => state.directionDelete);\n  const {\n    success: successDelete\n  } = directionDelete;\n  const directionUpdate = useSelector(state => state.directionUpdate);\n  const {\n    success: successUpdate\n  } = directionUpdate;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (successAdd) {\n      dispatch({\n        type: ADD_DIRECTION_RESET\n      });\n    }\n\n    if (successDelete) {\n      dispatch({\n        type: DELETE_DIRECTION_RESET\n      });\n      dispatch(detailsRecipe(id));\n    }\n\n    if (successUpdate) {\n      dispatch({\n        type: UPDATE\n      });\n    }\n\n    dispatch(detailsRecipe(id));\n  }, [dispatch, navigate, id, successAdd, successDelete]);\n\n  const addHandler = () => {\n    dispatch(addDirection(id));\n  };\n\n  const deleteHandler = direction => {\n    dispatch(deleteDirection(id, direction._id));\n  };\n\n  const updateHandler = direction => {\n    dispatch(updateDirection(id, {\n      _id: direction._id,\n      task\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Directions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Add, {\n      onClick: addHandler,\n      children: /*#__PURE__*/_jsxDEV(RiAddLine, {\n        className: \"add\",\n        fontSize: \"40px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: recipe.directions.map(direction => /*#__PURE__*/_jsxDEV(DirectionRow, {\n        children: [/*#__PURE__*/_jsxDEV(DirectionCard, {\n          id: direction._id,\n          autoFocus: true,\n          height: height,\n          value: task,\n          onChange: e => setTask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Update, {\n          onClick: () => updateHandler(direction),\n          children: /*#__PURE__*/_jsxDEV(GrUpdate, {\n            fontSize: \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Delete, {\n          onClick: () => deleteHandler(direction),\n          children: /*#__PURE__*/_jsxDEV(FaTrash, {\n            fontSize: \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }, this))\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Directions, \"g4lvMu9dHKZiNNlBJ+1kQ6+fTNw=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector, useSelector, useDispatch, useNavigate];\n});\n\n_c7 = Directions;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"Add\");\n$RefreshReg$(_c3, \"Update\");\n$RefreshReg$(_c4, \"DirectionRow\");\n$RefreshReg$(_c5, \"Delete\");\n$RefreshReg$(_c6, \"DirectionCard\");\n$RefreshReg$(_c7, \"Directions\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/Directions.jsx"],"names":["React","useEffect","useDispatch","useSelector","styled","FaTrash","RiAddLine","GrUpdate","LoadingBox","MessageBox","useNavigate","useParams","addDirection","deleteDirection","detailsRecipe","updateDirection","ADD_DIRECTION_RESET","DELETE_DIRECTION_RESET","DirectionCards","useState","PageWrapper","div","Add","button","Update","DirectionRow","Delete","DirectionCard","textarea","props","height","Directions","id","task","setTask","setHeight","recipeDetails","state","loading","error","recipe","directionAdd","success","successAdd","directionDelete","successDelete","directionUpdate","successUpdate","dispatch","navigate","type","UPDATE","addHandler","deleteHandler","direction","_id","updateHandler","directions","map","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport {FaTrash} from 'react-icons/fa';\r\nimport {RiAddLine} from 'react-icons/ri';\r\nimport {GrUpdate} from 'react-icons/gr';\r\n\r\n// Component Imports\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { addDirection, deleteDirection, detailsRecipe, updateDirection } from '../actions/recipeActions';\r\nimport { ADD_DIRECTION_RESET, DELETE_DIRECTION_RESET } from '../constants/recipeConstants';\r\nimport DirectionCards from '../components/DirectionCards';\r\nimport { useState } from 'react';\r\n\r\nconst PageWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 2%;\r\n\r\n    h1 {\r\n        font-size: 40px;\r\n        color: white;\r\n        text-align: center;\r\n    }\r\n\r\n    h3 {\r\n        color: white;\r\n        margin-left: 25%;\r\n        font-size: 30px;\r\n    }\r\n    \r\n`;\r\n\r\nconst Add = styled.button`\r\n    width: 10%;\r\n    margin: 0 0 1% 25%;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: green;\r\n    padding: 5px;\r\n\r\n    &:hover .add {\r\n        transform: scale(1.1);\r\n        transition: transform ease-in-out 1s;\r\n    }\r\n`;\r\n\r\nconst Update = styled.button`\r\n    margin-left: 20px;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: green;\r\n`;\r\n\r\nconst DirectionRow = styled.div`\r\n    display: flex;\r\n    margin-bottom: 2%;\r\n`;\r\n\r\nconst Delete = styled.button`\r\n    margin-left: 20px;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    background-color: red;\r\n    cursor: pointer;\r\n    outline: none;\r\n`;\r\n\r\nconst DirectionCard = styled.textarea`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 50%;\r\n    margin-left: 25%;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    font-size: 20px;\r\n    color: white;\r\n    background-color: rgb(73, 73, 77);\r\n    resize: none;\r\n    padding: 10px;\r\n    height: ${props => props.height || '100px'};\r\n    outline: none;\r\n`;\r\n\r\nexport default function Directions() {\r\n\r\n    const {id} = useParams();\r\n\r\n    const [task, setTask] = useState('');\r\n    const [height, setHeight] = useState('');\r\n\r\n    const recipeDetails = useSelector(state => state.recipeDetails);\r\n    const {loading, error, recipe} = recipeDetails;\r\n\r\n    const directionAdd = useSelector(state => state.directionAdd);\r\n    const {success: successAdd} = directionAdd;\r\n\r\n    const directionDelete = useSelector(state => state.directionDelete);\r\n    const {success: successDelete} = directionDelete;\r\n\r\n    const directionUpdate = useSelector(state => state.directionUpdate);\r\n    const {success: successUpdate} = directionUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (successAdd) {\r\n            dispatch({type: ADD_DIRECTION_RESET});\r\n        }\r\n\r\n        if (successDelete) {\r\n            dispatch({type: DELETE_DIRECTION_RESET});\r\n            dispatch(detailsRecipe(id));\r\n        }\r\n\r\n        if (successUpdate) {\r\n            dispatch({type: UPDATE})\r\n        }\r\n\r\n        dispatch(detailsRecipe(id));\r\n\r\n    }, [dispatch, navigate, id, successAdd, successDelete]);\r\n\r\n    const addHandler = () => {\r\n        dispatch(addDirection(id));\r\n    }\r\n\r\n    const deleteHandler = (direction) => {\r\n        dispatch(deleteDirection(id, direction._id));\r\n    }\r\n\r\n    const updateHandler = (direction) => {\r\n        dispatch(updateDirection(id, {\r\n            _id: direction._id,\r\n            task\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <h1>Directions</h1>\r\n            <Add onClick = {addHandler}><RiAddLine className = 'add' fontSize = '40px'/></Add>\r\n            {loading ? (<LoadingBox />)\r\n                :\r\n                error ? (<MessageBox variant = 'danger'>{error}</MessageBox>)\r\n                :\r\n                (\r\n                <>\r\n                    {recipe.directions.map((direction) => (\r\n                        <DirectionRow>\r\n                            <DirectionCard\r\n                                id = {direction._id}\r\n                                autoFocus\r\n                                height = {height}\r\n                                value = {task}\r\n                                onChange = {(e) => setTask(e.target.value)}\r\n                            />\r\n                            <Update onClick = {() => updateHandler(direction)}><GrUpdate fontSize = '30px' /></Update>\r\n                            <Delete onClick = {() => deleteHandler(direction)}><FaTrash fontSize = '30px' /></Delete>\r\n                        </DirectionRow>         \r\n                    ))}\r\n                </>\r\n            )}\r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}