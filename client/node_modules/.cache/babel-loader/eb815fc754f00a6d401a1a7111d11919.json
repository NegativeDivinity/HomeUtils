{"ast":null,"code":"import _slicedToArray from\"C:/Users/Skele/Documents/GitHub/HomeUtils/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/Skele/Documents/GitHub/HomeUtils/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{useNavigate,useParams}from'react-router';import styled from'styled-components';import{detailsUser,updateUser}from'../actions/userActions';import LoadingBox from'../components/LoadingBox';import MessageBox from'../components/MessageBox';import{USER_DETAILS_UPDATE_RESET}from'../constants/userConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PageWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    margin-top: 2%;\\n    color: white;\\n\"])));var UserEditForm=styled.form(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    splay: flex;\\n    flex-direction: column;\\n    margin: 0 0 1% 30%;\\n    width: 40%;\\n    border: solid black 3px;\\n    padding: 10px;\\n    border-radius: 10px;\\n    background-color: rgb(73, 73, 77);\\n\\n    h1 {\\n        text-align: center;\\n    }\\n\\n    div {\\n        display: flex;\\n        justify-content: space-between;\\n        padding: 15px;\\n        color: white;\\n        font-size: 20px;\\n\\n        input {\\n            padding: 5px;\\n            width: 50%;\\n            border-radius: 10px;\\n            outline: none;\\n            border: none;\\n        }\\n    }\\n\"])));var Submit=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    width: 80%;\\n    margin: 2% 0 0 10%;\\n    border-radius: 10px;\\n    padding: 10px;\\n    cursor: pointer;\\n\\n    &:hover {\\n        opacity: 0.7;\\n    }\\n\"])));export default function UserEdit(){var dispatch=useDispatch();var navigate=useNavigate();var _useParams=useParams(),id=_useParams.id;var userDetails=useSelector(function(state){return state.userDetails;});var loadingDetail=userDetails.loading,errorDetail=userDetails.error,user=userDetails.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var success=userUpdate.success;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),firstName=_useState2[0],setFirstName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),lastName=_useState4[0],setLastName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),userName=_useState6[0],setUserName=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),email=_useState8[0],setEmail=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),password=_useState10[0],setPassword=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),confirmPassword=_useState12[0],setConfirmPassword=_useState12[1];useEffect(function(){if(success){dispatch({type:USER_DETAILS_UPDATE_RESET});navigate('/users');}if(!user){dispatch(detailsUser(id));}else{setFirstName(user.firstName);setLastName(user.lastName);setUserName(user.userName);setEmail(user.email);}},[dispatch,user,id,navigate,success]);var submitHandler=function submitHandler(e){e.preventDefault();if(password!==confirmPassword){alert('Passwords do not match!');}else{dispatch(updateUser({userId:user._id,firstName:firstName,lastName:lastName,userName:userName,email:email,password:password}));}};return/*#__PURE__*/_jsx(PageWrapper,{children:/*#__PURE__*/_jsx(UserEditForm,{onSubmit:submitHandler,children:loadingDetail?/*#__PURE__*/_jsx(LoadingBox,{}):errorDetail?/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:errorDetail}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:user.name}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"firstName\",children:\"First Name: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"firstName\",value:firstName,onChange:function onChange(e){return setFirstName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"lastName\",children:\"Last Name: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"lastName\",value:lastName,onChange:function onChange(e){return setLastName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"userName\",children:\"Username: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"userName\",value:userName,onChange:function onChange(e){return setUserName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"Confirm Password: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Submit,{type:\"submit\",children:\"Update\"})]})})});}","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/UserEdit.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","useParams","styled","detailsUser","updateUser","LoadingBox","MessageBox","USER_DETAILS_UPDATE_RESET","PageWrapper","div","UserEditForm","form","Submit","button","UserEdit","dispatch","navigate","id","userDetails","state","loadingDetail","loading","errorDetail","error","user","userUpdate","success","firstName","setFirstName","lastName","setLastName","userName","setUserName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","type","submitHandler","e","preventDefault","alert","userId","_id","name","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport { detailsUser, updateUser } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { USER_DETAILS_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst PageWrapper = styled.div`\r\n    margin-top: 2%;\r\n    color: white;\r\n`;\r\n\r\nconst UserEditForm = styled.form`\r\n    splay: flex;\r\n    flex-direction: column;\r\n    margin: 0 0 1% 30%;\r\n    width: 40%;\r\n    border: solid black 3px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    background-color: rgb(73, 73, 77);\r\n\r\n    h1 {\r\n        text-align: center;\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 15px;\r\n        color: white;\r\n        font-size: 20px;\r\n\r\n        input {\r\n            padding: 5px;\r\n            width: 50%;\r\n            border-radius: 10px;\r\n            outline: none;\r\n            border: none;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Submit = styled.button`\r\n    width: 80%;\r\n    margin: 2% 0 0 10%;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nexport default function UserEdit() {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const {id} = useParams();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const {loading: loadingDetail, error: errorDetail, user} = userDetails;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const {success} = userUpdate;\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        if (success) {\r\n            dispatch({type: USER_DETAILS_UPDATE_RESET});\r\n            navigate('/users');\r\n        }\r\n\r\n        if (!user) {\r\n            dispatch(detailsUser(id));\r\n        } else {\r\n            setFirstName(user.firstName);\r\n            setLastName(user.lastName);\r\n            setUserName(user.userName);\r\n            setEmail(user.email);\r\n        }\r\n\r\n    }, [dispatch, user, id, navigate, success]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            alert('Passwords do not match!')\r\n        } else {\r\n            dispatch(updateUser({userId: \r\n                user._id, \r\n                firstName, \r\n                lastName, \r\n                userName, \r\n                email, \r\n                password,\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n       <PageWrapper>\r\n           <UserEditForm onSubmit = {submitHandler}>\r\n                {loadingDetail ? (\r\n                        <LoadingBox />\r\n                    ) : errorDetail ? (\r\n                        <MessageBox variant = 'danger'>{errorDetail}</MessageBox>\r\n                    ) :\r\n                        <>\r\n                            <h1>{user.name}</h1>\r\n                            <div>\r\n                                <label htmlFor=\"firstName\">First Name: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'firstName'\r\n                                    value = {firstName} \r\n                                    onChange = {(e) => setFirstName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"lastName\">Last Name: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'lastName' \r\n                                    value = {lastName} \r\n                                    onChange = {(e) => setLastName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"userName\">Username: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'userName' \r\n                                    value = {userName} \r\n                                    onChange = {(e) => setUserName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\">Email: </label>\r\n                                <input \r\n                                    type=\"email\" \r\n                                    id = 'email' \r\n                                    value = {email} \r\n                                    onChange = {(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"password\">Password: </label>\r\n                                <input \r\n                                    type=\"password\" \r\n                                    id = 'password' \r\n                                    value={password} \r\n                                    onChange = {(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"confirmPassword\">Confirm Password: </label>\r\n                                <input \r\n                                    type=\"password\" \r\n                                    id = 'confirmPassword' \r\n                                    value={confirmPassword} \r\n                                    onChange = {(e) => setConfirmPassword(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Submit type = 'submit'>Update</Submit>\r\n                        </>\r\n                }\r\n            </UserEditForm>\r\n       </PageWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}