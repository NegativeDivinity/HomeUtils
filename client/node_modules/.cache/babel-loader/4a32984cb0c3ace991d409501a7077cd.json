{"ast":null,"code":"import axios from 'axios';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNOUT, USER_DETAILS_FAIL, USER_DETAILS_SUCCEED, USER_DETAILS_REQUEST, USER_DETAILS_UPDATE_REQUEST, USER_DETAILS_UPDATE_SUCCEED, USER_DETAILS_UPDATE_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCEED, USER_LIST_FAIL, USER_ADD_REQUEST } from '../constants/userConstants.js';\nexport const signin = (userName, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      userName,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/users/signin', {\n      userName,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: message\n    });\n  }\n};\nexport const signout = () => async dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCEED,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUser = () => async (dispatch, getState) => {\n  dispatch({\n    type: USER_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get('/users', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_LIST_SUCCEED,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_UPDATE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put('/users/profile', user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_UPDATE_SUCCEED,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const addUser = () => async (dispatch, getState) => {\n  dispatch({\n    type: USER_ADD_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n};","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/actions/userActions.js"],"names":["axios","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNOUT","USER_DETAILS_FAIL","USER_DETAILS_SUCCEED","USER_DETAILS_REQUEST","USER_DETAILS_UPDATE_REQUEST","USER_DETAILS_UPDATE_SUCCEED","USER_DETAILS_UPDATE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCEED","USER_LIST_FAIL","USER_ADD_REQUEST","signin","userName","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","message","response","signout","removeItem","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","listUser","updateUser","user","put","addUser"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS,\r\n    USER_SIGNIN_FAIL,\r\n    USER_SIGNOUT,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_SUCCEED,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_UPDATE_REQUEST,\r\n    USER_DETAILS_UPDATE_SUCCEED,\r\n    USER_DETAILS_UPDATE_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCEED,\r\n    USER_LIST_FAIL,\r\n    USER_ADD_REQUEST\r\n} from '../constants/userConstants.js';\r\n\r\nexport const signin = (userName, password) => async(dispatch) => {\r\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {userName, password}});\r\n\r\n    try {\r\n        const {data} = await axios.post('/users/signin', {userName, password});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n        dispatch({type: USER_SIGNIN_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const signout = () => async(dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({type: USER_SIGNOUT});\r\n}\r\n\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({type: USER_DETAILS_REQUEST, payload: userId});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.get(`/users/${userId}`, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n\r\n        dispatch({type: USER_DETAILS_SUCCEED, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: USER_DETAILS_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const listUser = () => async(dispatch, getState) => {\r\n    dispatch({type: USER_LIST_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.get('/users', {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: USER_LIST_SUCCEED, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: USER_LIST_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    dispatch({type: USER_DETAILS_UPDATE_REQUEST, payload: user});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.put('/users/profile', user, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        \r\n        dispatch({type: USER_DETAILS_UPDATE_SUCCEED, payload: data});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: USER_DETAILS_UPDATE_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const addUser = () => async (dispatch, getState) => {\r\n    dispatch({type: USER_ADD_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n}"]},"metadata":{},"sourceType":"module"}