{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\components\\\\DirectionCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { updateDirection } from '../actions/recipeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IngredientCards(props) {\n  _s();\n\n  const [task, setTask] = useState('');\n  const [height, setHeight] = useState('');\n  const {\n    direction\n  } = props;\n  const {\n    recipeId\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setTask(direction.task);\n    setHeight(task.length / 2);\n  }, [direction]);\n  const DirectionCard = styled.textarea`\n        display: flex;\n        justify-content: space-between;\n        width: 50%;\n        margin-left: 25%;\n        border: solid black 2px;\n        border-radius: 10px;\n        font-size: 20px;\n        color: white;\n        background-color: rgb(73, 73, 77);\n        resize: none;\n        padding: 10px;\n        height: ${height}px;\n        outline: none;\n    `;\n\n  const submitHandler = () => {\n    dispatch(updateDirection(recipeId, {\n      _id: direction._id,\n      task\n    }));\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setTask(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DirectionCard, {\n    id: direction._id,\n    auto: true,\n    value: task,\n    onChange: handleChange,\n    onSubmit: submitHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(IngredientCards, \"ReNTenSrX8RP3/C6LtQpAbuw41g=\", false, function () {\n  return [useDispatch];\n});\n\n_c = IngredientCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientCards\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/components/DirectionCards.js"],"names":["React","useEffect","useState","useRef","useDispatch","styled","updateDirection","IngredientCards","props","task","setTask","height","setHeight","direction","recipeId","dispatch","length","DirectionCard","textarea","submitHandler","_id","handleChange","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,eAAR,QAA8B,0BAA9B;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM;AAACW,IAAAA;AAAD,MAAcL,KAApB;AACA,QAAM;AAACM,IAAAA;AAAD,MAAaN,KAAnB;AACA,QAAMO,QAAQ,GAAGX,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAACG,SAAS,CAACJ,IAAX,CAAP;AACAG,IAAAA,SAAS,CAACH,IAAI,CAACO,MAAL,GAAY,CAAb,CAAT;AACH,GAHQ,EAGN,CAACH,SAAD,CAHM,CAAT;AAKA,QAAMI,aAAa,GAAGZ,MAAM,CAACa,QAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBP,MAAO;AACzB;AACA,KAdI;;AAgBA,QAAMQ,aAAa,GAAG,MAAM;AACxBJ,IAAAA,QAAQ,CAACT,eAAe,CAACQ,QAAD,EAAW;AAC/BM,MAAAA,GAAG,EAAEP,SAAS,CAACO,GADgB;AAE/BX,MAAAA;AAF+B,KAAX,CAAhB,CAAR;AAIH,GALD;;AAOA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEAb,IAAAA,OAAO,CAACY,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AAEH,GALD;;AAOA,sBACI,QAAC,aAAD;AACI,IAAA,EAAE,EAAIZ,SAAS,CAACO,GADpB;AAEI,IAAA,IAAI,MAFR;AAGI,IAAA,KAAK,EAAIX,IAHb;AAII,IAAA,QAAQ,EAAIY,YAJhB;AAKI,IAAA,QAAQ,EAAIF;AALhB;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GArDuBZ,e;UAOHH,W;;;KAPGG,e","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {updateDirection} from '../actions/recipeActions';\r\n\r\nexport default function IngredientCards(props) {\r\n\r\n    const [task, setTask] = useState('');\r\n    const [height, setHeight] = useState('');\r\n\r\n    const {direction} = props;\r\n    const {recipeId} = props;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setTask(direction.task);\r\n        setHeight(task.length/2);\r\n    }, [direction]);\r\n\r\n    const DirectionCard = styled.textarea`\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 50%;\r\n        margin-left: 25%;\r\n        border: solid black 2px;\r\n        border-radius: 10px;\r\n        font-size: 20px;\r\n        color: white;\r\n        background-color: rgb(73, 73, 77);\r\n        resize: none;\r\n        padding: 10px;\r\n        height: ${height}px;\r\n        outline: none;\r\n    `;\r\n\r\n    const submitHandler = () => {\r\n        dispatch(updateDirection(recipeId, {\r\n            _id: direction._id,\r\n            task\r\n        }));\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        setTask(e.target.value);\r\n        \r\n    }\r\n\r\n    return (\r\n        <DirectionCard \r\n            id = {direction._id}\r\n            auto\r\n            value = {task}\r\n            onChange = {handleChange}\r\n            onSubmit = {submitHandler}\r\n        />\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}