{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\UserEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport styled from 'styled-components';\nimport { detailsUser } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.div`\n\n`;\n_c = PageWrapper;\nconst UserEditForm = styled.form`\n\n`;\n_c2 = UserEditForm;\nexport default function UserEdit() {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const detailsUser = useSelector(state => state.detailsUser);\n  const {\n    loading: loadingDetail,\n    error: errorDetail,\n    user\n  } = detailsUser;\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  useEffect(() => {\n    dispatch(detailsUser(id));\n  }, [dispatch]);\n\n  const submitHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(UserEditForm, {\n      onSubmit: submitHandler,\n      children: loadingDetail ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this) : errorDetail ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstName\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastName\",\n            value: lastName,\n            onChange: e => setNickName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(PhoneInput, {\n            phone: phone,\n            setPhone: setPhone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"job\",\n            children: \"Job: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"job\",\n            value: job,\n            onChange: e => setJob(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"company\",\n            children: \"Company: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"company\",\n            value: company,\n            onChange: e => setCompany(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Submit, {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 8\n  }, this);\n}\n\n_s(UserEdit, \"zrlwalgtwX51A4L7rEjsaj/yGtM=\", true, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c3 = UserEdit;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"UserEditForm\");\n$RefreshReg$(_c3, \"UserEdit\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/UserEdit.jsx"],"names":["React","useEffect","useDispatch","useSelector","useParams","styled","detailsUser","PageWrapper","div","UserEditForm","form","UserEdit","dispatch","navigate","useNavigate","id","state","loading","loadingDetail","error","errorDetail","user","firstName","setFirstName","useState","lastName","setLastName","userName","setUserName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","submitHandler","name","e","target","value","setNickName","phone","setPhone","job","setJob","company","setCompany"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAI;AAC/B;AACA,CAFA;KAAMD,W;AAIN,MAAME,YAAY,GAAGJ,MAAM,CAACK,IAAK;AACjC;AACA,CAFA;MAAMD,Y;AAIN,eAAe,SAASE,QAAT,GAAoB;AAAA;;AAE/B,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAOX,SAAS,EAAtB;AAEA,QAAME,WAAW,GAAGH,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACV,WAAhB,CAA/B;AACA,QAAM;AAACW,IAAAA,OAAO,EAAEC,aAAV;AAAyBC,IAAAA,KAAK,EAAEC,WAAhC;AAA6CC,IAAAA;AAA7C,MAAqDf,WAA3D;AAEA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BF,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACN,WAAW,CAACS,EAAD,CAAZ,CAAR;AACH,GAFQ,EAEN,CAACH,QAAD,CAFM,CAAT;;AAIA,QAAMuB,aAAa,GAAG,MAAM,CAE3B,CAFD;;AAIA,sBACG,QAAC,WAAD;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAIA,aAA1B;AAAA,gBACMjB,aAAa,gBACN,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADM,GAENE,WAAW,gBACX,QAAC,UAAD;AAAY,QAAA,OAAO,EAAG,QAAtB;AAAA,kBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,cADW,gBAGX;AAAA,gCACI;AAAA,oBAAKC,IAAI,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAG,WAFT;AAGI,YAAA,KAAK,EAAId,SAHb;AAII,YAAA,QAAQ,EAAKe,CAAD,IAAOd,YAAY,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAJnC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAG,UAFT;AAGI,YAAA,KAAK,EAAId,QAHb;AAII,YAAA,QAAQ,EAAKY,CAAD,IAAOG,WAAW,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV;AAJlC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAoBI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAIE,KAArB;AAA4B,YAAA,QAAQ,EAAIC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ,eAwBI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,EAAE,EAAG,OAFT;AAGI,YAAA,KAAK,EAAIb,KAHb;AAII,YAAA,QAAQ,EAAKQ,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ/B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ,eAiCI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAG,KAFT;AAGI,YAAA,KAAK,EAAEI,GAHX;AAII,YAAA,QAAQ,EAAKN,CAAD,IAAOO,MAAM,CAACP,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCJ,eA0CI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAG,SAFT;AAGI,YAAA,KAAK,EAAEM,OAHX;AAII,YAAA,QAAQ,EAAKR,CAAD,IAAOS,UAAU,CAACT,CAAC,CAACC,MAAF,CAASC,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1CJ,eAmDI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnDJ;AAAA;AANb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAiEH;;GAzFuB5B,Q;UAEHT,W,EAEJE,S,EAEOD,W;;;MANAQ,Q","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport { detailsUser } from '../actions/userActions';\r\n\r\nconst PageWrapper = styled.div`\r\n\r\n`;\r\n\r\nconst UserEditForm = styled.form`\r\n\r\n`;\r\n\r\nexport default function UserEdit() {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const {id} = useParams();\r\n\r\n    const detailsUser = useSelector(state => state.detailsUser);\r\n    const {loading: loadingDetail, error: errorDetail, user} = detailsUser;\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsUser(id));\r\n    }, [dispatch]);\r\n\r\n    const submitHandler = () => {\r\n\r\n    }\r\n\r\n    return (\r\n       <PageWrapper>\r\n           <UserEditForm onSubmit = {submitHandler}>\r\n                {loadingDetail ? (\r\n                        <LoadingBox />\r\n                    ) : errorDetail ? (\r\n                        <MessageBox variant = 'danger'>{errorDetail}</MessageBox>\r\n                    ) :\r\n                        <>\r\n                            <h1>{user.name}</h1>\r\n                            <div>\r\n                                <label htmlFor=\"firstName\">First Name: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'firstName'\r\n                                    value = {firstName} \r\n                                    onChange = {(e) => setFirstName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"lastName\">Last Name: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'lastName' \r\n                                    value = {lastName} \r\n                                    onChange = {(e) => setNickName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"phone\">Phone: </label>\r\n                                <PhoneInput phone = {phone} setPhone = {setPhone} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\">Email: </label>\r\n                                <input \r\n                                    type=\"email\" \r\n                                    id = 'email' \r\n                                    value = {email} \r\n                                    onChange = {(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"job\">Job: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'job' \r\n                                    value={job} \r\n                                    onChange = {(e) => setJob(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"company\">Company: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'company' \r\n                                    value={company} \r\n                                    onChange = {(e) => setCompany(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Submit type = 'submit'>Update</Submit>\r\n                        </>\r\n                }\r\n            </UserEditForm>\r\n       </PageWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}