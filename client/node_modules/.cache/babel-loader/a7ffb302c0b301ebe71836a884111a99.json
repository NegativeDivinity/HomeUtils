{"ast":null,"code":"import _slicedToArray from\"C:/Users/Skele/Documents/GitHub/HomeUtils/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/Skele/Documents/GitHub/HomeUtils/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{useNavigate,useParams}from'react-router';import styled from'styled-components';import{detailsGrocery,updateGrocery}from'../actions/groceryActions';import{detailsUser,updateUser}from'../actions/userActions';import LoadingBox from'../components/LoadingBox';import MessageBox from'../components/MessageBox';import{GROCERY_DETAILS_UPDATE_RESET}from'../constants/groceryConstants';import{USER_DETAILS_UPDATE_RESET}from'../constants/userConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PageWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    margin-top: 2%;\\n    color: white;\\n\"])));var GroceryEditForm=styled.form(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    splay: flex;\\n    flex-direction: column;\\n    margin: 0 0 1% 30%;\\n    width: 40%;\\n    border: solid black 3px;\\n    padding: 10px;\\n    border-radius: 10px;\\n    background-color: rgb(73, 73, 77);\\n\\n    h1 {\\n        text-align: center;\\n    }\\n\\n    div {\\n        display: flex;\\n        justify-content: space-between;\\n        padding: 15px;\\n        color: white;\\n        font-size: 20px;\\n\\n        input {\\n            padding: 5px;\\n            width: 50%;\\n            border-radius: 10px;\\n            outline: none;\\n            border: none;\\n        }\\n    }\\n\"])));var Submit=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    width: 80%;\\n    margin: 2% 0 0 10%;\\n    border-radius: 10px;\\n    padding: 10px;\\n    cursor: pointer;\\n\\n    &:hover {\\n        opacity: 0.7;\\n    }\\n\"])));export default function GroceryEdit(){var dispatch=useDispatch();var navigate=useNavigate();var _useParams=useParams(),id=_useParams.id;var groceryDetails=useSelector(function(state){return state.groceryDetails;});var loadingDetail=groceryDetails.loading,errorDetail=groceryDetails.error,grocery=groceryDetails.grocery;var groceryUpdate=useSelector(function(state){return state.groceryUpdate;});var success=groceryUpdate.success;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),quantity=_useState4[0],setQuantity=_useState4[1];useEffect(function(){if(success){navigate('/grocery');}if(!grocery||grocery._id!==id||success){dispatch({type:GROCERY_DETAILS_UPDATE_RESET});dispatch(detailsGrocery(id));}else{setName(grocery.name);setQuantity(grocery.quantity);}},[dispatch,grocery,id,navigate,success]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateGrocery({_id:grocery._id,name:name,quantity:quantity}));};return/*#__PURE__*/_jsx(PageWrapper,{children:/*#__PURE__*/_jsx(GroceryEditForm,{onSubmit:submitHandler,children:loadingDetail?/*#__PURE__*/_jsx(LoadingBox,{}):errorDetail?/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:errorDetail}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:grocery.name}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"quantity\",children:\"Quantity: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"quantity\",value:quantity,onChange:function onChange(e){return setQuantity(e.target.value);}})]}),/*#__PURE__*/_jsx(Submit,{type:\"submit\",children:\"Update\"})]})})});}","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/GroceryEdit.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","useParams","styled","detailsGrocery","updateGrocery","detailsUser","updateUser","LoadingBox","MessageBox","GROCERY_DETAILS_UPDATE_RESET","USER_DETAILS_UPDATE_RESET","PageWrapper","div","GroceryEditForm","form","Submit","button","GroceryEdit","dispatch","navigate","id","groceryDetails","state","loadingDetail","loading","errorDetail","error","grocery","groceryUpdate","success","name","setName","quantity","setQuantity","_id","type","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport { detailsGrocery, updateGrocery } from '../actions/groceryActions';\r\nimport { detailsUser, updateUser } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { GROCERY_DETAILS_UPDATE_RESET } from '../constants/groceryConstants';\r\nimport { USER_DETAILS_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst PageWrapper = styled.div`\r\n    margin-top: 2%;\r\n    color: white;\r\n`;\r\n\r\nconst GroceryEditForm = styled.form`\r\n    splay: flex;\r\n    flex-direction: column;\r\n    margin: 0 0 1% 30%;\r\n    width: 40%;\r\n    border: solid black 3px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    background-color: rgb(73, 73, 77);\r\n\r\n    h1 {\r\n        text-align: center;\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 15px;\r\n        color: white;\r\n        font-size: 20px;\r\n\r\n        input {\r\n            padding: 5px;\r\n            width: 50%;\r\n            border-radius: 10px;\r\n            outline: none;\r\n            border: none;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Submit = styled.button`\r\n    width: 80%;\r\n    margin: 2% 0 0 10%;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nexport default function GroceryEdit() {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const {id} = useParams();\r\n\r\n    const groceryDetails = useSelector(state => state.groceryDetails);\r\n    const {loading: loadingDetail, error: errorDetail, grocery} = groceryDetails;\r\n\r\n    const groceryUpdate = useSelector(state => state.groceryUpdate);\r\n    const {success} = groceryUpdate;\r\n\r\n    const [name, setName] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        if (success) {\r\n            navigate('/grocery');\r\n        }\r\n\r\n        if (!grocery || (grocery._id !== id || success)) {\r\n            dispatch({type: GROCERY_DETAILS_UPDATE_RESET});\r\n            dispatch(detailsGrocery(id));\r\n        } else {\r\n            setName(grocery.name);\r\n            setQuantity(grocery.quantity);\r\n        }\r\n\r\n    }, [dispatch, grocery, id, navigate, success]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n            \r\n        dispatch(updateGrocery({_id: \r\n                grocery._id, \r\n                name, \r\n                quantity,\r\n            }));\r\n    }\r\n\r\n    return (\r\n       <PageWrapper>\r\n           <GroceryEditForm onSubmit = {submitHandler}>\r\n                {loadingDetail ? (\r\n                        <LoadingBox />\r\n                    ) : errorDetail ? (\r\n                        <MessageBox variant = 'danger'>{errorDetail}</MessageBox>\r\n                    ) :\r\n                        <>\r\n                            <h1>{grocery.name}</h1>\r\n                            <div>\r\n                                <label htmlFor=\"name\">Name: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'name'\r\n                                    value = {name} \r\n                                    onChange = {(e) => setName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"quantity\">Quantity: </label>\r\n                                <input \r\n                                    type=\"number\" \r\n                                    id = 'quantity' \r\n                                    value = {quantity} \r\n                                    onChange = {(e) => setQuantity(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Submit type = 'submit'>Update</Submit>\r\n                        </>\r\n                }\r\n            </GroceryEditForm>\r\n       </PageWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}