{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\UserBio.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { listUser } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport UserCard from '../components/UserCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.div`\n    display: flex;\n    width: 80%;\n`;\n_c = PageWrapper;\nexport default function UserBio() {\n  _s();\n\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users\n  } = userList;\n  useEffect(() => {\n    dispatch(listUser());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(UserCard, {\n        user: user\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserBio, \"+TOZS+45e+au/c9E1I6+WzRrxaY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = UserBio;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"UserBio\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/UserBio.jsx"],"names":["React","useEffect","useDispatch","useSelector","styled","listUser","LoadingBox","MessageBox","UserCard","PageWrapper","div","UserBio","dispatch","userList","state","loading","error","users","map","user","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,WAAW,GAAGL,MAAM,CAACM,GAAI;AAC/B;AACA;AACA,CAHA;KAAMD,W;AAKN,eAAe,SAASE,OAAT,GAAmB;AAAA;;AAE9B,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,QAAQ,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAM;AAACE,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA0BJ,QAAhC;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACP,QAAQ,EAAT,CAAR;AACH,GAFQ,EAEN,CAACO,QAAD,CAFM,CAAT;AAIA,sBACI,QAAC,WAAD;AAAA,cACKG,OAAO,gBACJ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADI,GAEJC,KAAK,gBACL,QAAC,UAAD;AAAY,MAAA,OAAO,EAAG,QAAtB;AAAA,gBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL;AAAA,gBACKC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACX,QAAC,QAAD;AAA2B,QAAA,IAAI,EAAIA;AAAnC,SAAiBA,IAAI,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AANR;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA1BuBT,O;UAEHT,W,EAEAC,W;;;MAJGQ,O","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { listUser } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport UserCard from '../components/UserCard';\r\n\r\nconst PageWrapper = styled.div`\r\n    display: flex;\r\n    width: 80%;\r\n`;\r\n\r\nexport default function UserBio() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userList = useSelector(state => state.userList);\r\n    const {loading, error, users} = userList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listUser());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <PageWrapper>\r\n            {loading ? (\r\n                <LoadingBox />\r\n            ) : error ? (\r\n                <MessageBox variant = 'danger'>{error}</MessageBox>\r\n            ) : (\r\n                <>\r\n                    {users.map(user => (\r\n                        <UserCard key = {user._id} user = {user} />\r\n                    ))}\r\n                </>\r\n            )}\r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}