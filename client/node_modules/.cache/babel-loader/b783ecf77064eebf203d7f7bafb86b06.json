{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\SigninPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { signin } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 10%;\n`;\n_c = SignWrapper;\nconst SignForm = styled.form`\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    width: 40%;\n    padding: 20px;\n    align-items: center;\n    font-size: 20px;\n    border: 5px solid rgb(0, 0, 0, 0.15);\n    border-radius: 5px;\n\n    div {\n        display: flex;\n        flex-direction: column;\n        text-align: left;\n        width: 60%;\n        padding-bottom: 20px;\n\n        label {\n            padding-bottom: 5px;\n            font-style: italic;\n        }\n\n        input {\n            height: 25px;\n            padding: 5px;\n            border: 2px solid rgb(0, 0, 0, 0.1);\n            border-bottom: 2px solid rgb(0, 0, 0);\n            outline: none;\n            border-radius: 5px;\n            font-size: 20px;\n            font-style: italic;\n        }\n    }\n\n    button {\n        width: 40%;\n        margin-top: 20px;\n        padding: 5px;\n        background-color: white;\n        border-radius: 5px;\n        border: 2px solid rgb(0, 0, 0, 0.2);\n        border-bottom: 2px solid rgb(0, 0, 0);\n        cursor: pointer;\n    }\n\n    button:hover {\n        border: 2px solid rgb(0, 0, 0, 0.6);\n    }\n`;\n_c2 = SignForm;\nexport default function SigninPage() {\n  _s();\n\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo,\n    loading,\n    error\n  } = userSignin;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (userInfo) {\n      navigate('/dashboard');\n    }\n  }, [navigate, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(signin(userName, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignWrapper, {\n    children: [loading && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(SignForm, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userName\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"userName\",\n          required: true,\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SigninPage, \"NHmx1Z67Ea4sw8sj2i8niemnH6I=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n\n_c3 = SigninPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SignWrapper\");\n$RefreshReg$(_c2, \"SignForm\");\n$RefreshReg$(_c3, \"SigninPage\");","map":{"version":3,"sources":["C:/HomeUtils/client/src/pages/SigninPage.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","styled","signin","LoadingBox","MessageBox","SignWrapper","div","SignForm","form","SigninPage","userName","setUserName","password","setPassword","userSignin","state","userInfo","loading","error","dispatch","navigate","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { signin } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nconst SignWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 10%;\r\n`;\r\n\r\nconst SignForm = styled.form`\r\n    background-color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    text-align: center;\r\n    width: 40%;\r\n    padding: 20px;\r\n    align-items: center;\r\n    font-size: 20px;\r\n    border: 5px solid rgb(0, 0, 0, 0.15);\r\n    border-radius: 5px;\r\n\r\n    div {\r\n        display: flex;\r\n        flex-direction: column;\r\n        text-align: left;\r\n        width: 60%;\r\n        padding-bottom: 20px;\r\n\r\n        label {\r\n            padding-bottom: 5px;\r\n            font-style: italic;\r\n        }\r\n\r\n        input {\r\n            height: 25px;\r\n            padding: 5px;\r\n            border: 2px solid rgb(0, 0, 0, 0.1);\r\n            border-bottom: 2px solid rgb(0, 0, 0);\r\n            outline: none;\r\n            border-radius: 5px;\r\n            font-size: 20px;\r\n            font-style: italic;\r\n        }\r\n    }\r\n\r\n    button {\r\n        width: 40%;\r\n        margin-top: 20px;\r\n        padding: 5px;\r\n        background-color: white;\r\n        border-radius: 5px;\r\n        border: 2px solid rgb(0, 0, 0, 0.2);\r\n        border-bottom: 2px solid rgb(0, 0, 0);\r\n        cursor: pointer;\r\n    }\r\n\r\n    button:hover {\r\n        border: 2px solid rgb(0, 0, 0, 0.6);\r\n    }\r\n`;\r\n\r\nexport default function SigninPage() {\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo, loading, error} = userSignin;\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate('/dashboard');\r\n        }\r\n    }, [navigate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(signin(userName, password));\r\n    }\r\n\r\n    return (\r\n        <SignWrapper>\r\n            {loading && <LoadingBox />}\r\n            {error && <MessageBox variant = 'danger'>{error}</MessageBox>}\r\n            <SignForm onSubmit = {submitHandler}>\r\n                <h2>Sign In</h2>\r\n                <div>\r\n                    <label htmlFor=\"userName\">Username: </label>\r\n                    <input type=\"text\" id = 'userName' required onChange = {(e) => setUserName(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">Password: </label>\r\n                    <input type=\"password\" id = 'password' required onChange = {(e) => setPassword(e.target.value)} />\r\n                </div>\r\n                <button type = 'submit'>Submit</button>\r\n            </SignForm>\r\n        </SignWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}