{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\Ingredients.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { FaTrash } from 'react-icons/fa';\nimport { RiAddLine } from 'react-icons/ri'; // Component Imports\n\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useNavigate, useParams } from 'react-router';\nimport { addIngredient, deleteIngredient, detailsRecipe } from '../actions/recipeActions';\nimport { ADD_INGREDIENT_RESET, DELETE_INGREDIENT_RESET, INGREDIENT_UPDATE_RESET } from '../constants/recipeConstants';\nimport IngredientCards from '../components/IngredientCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-top: 2%;\n\n    h1 {\n        font-size: 40px;\n        color: white;\n        text-align: center;\n    }\n\n    h3 {\n        color: white;\n        margin-left: 25%;\n        font-size: 30px;\n    }\n    \n`;\n_c = PageWrapper;\nconst Add = styled.button`\n    width: 10%;\n    margin: 0 0 1% 25%;\n    border: solid black 2px;\n    border-radius: 10px;\n    cursor: pointer;\n    outline: none;\n    background-color: green;\n    padding: 5px;\n\n    &:hover .add {\n        transform: scale(1.1);\n        transition: transform ease-in-out 1s;\n    }\n`;\n_c2 = Add;\nconst IngredientRow = styled.div`\n    display: flex;\n    margin-bottom: 2%;\n`;\n_c3 = IngredientRow;\nconst Delete = styled.button`\n    margin-left: 20px;\n    border: solid black 2px;\n    border-radius: 10px;\n    background-color: red;\n    cursor: pointer;\n    outline: none;\n`;\n_c4 = Delete;\nexport default function Ingredients() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const recipeDetails = useSelector(state => state.recipeDetails);\n  const {\n    loading,\n    error,\n    recipe\n  } = recipeDetails;\n  const ingredientAdd = useSelector(state => state.ingredientAdd);\n  const {\n    success: successAdd\n  } = ingredientAdd;\n  const ingredientDelete = useSelector(state => state.ingredientDelete);\n  const {\n    success: successDelete\n  } = ingredientDelete;\n  const ingredientUpdate = useSelector(state => state.ingredientUpdate);\n  const {\n    success: successUpdate\n  } = ingredientUpdate;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (successAdd) {\n      dispatch({\n        type: ADD_INGREDIENT_RESET\n      });\n      dispatch(detailsRecipe(id));\n    }\n\n    if (successDelete) {\n      dispatch({\n        type: DELETE_INGREDIENT_RESET\n      });\n      dispatch(detailsRecipe(id));\n    }\n\n    if (successUpdate) {\n      dispatch({\n        type: INGREDIENT_UPDATE_RESET\n      });\n      dispatch(detailsRecipe(id));\n    }\n\n    dispatch(detailsRecipe(id));\n  }, [dispatch, navigate, id, successAdd, successDelete, successUpdate]);\n\n  const addHandler = () => {\n    dispatch(addIngredient(id));\n  };\n\n  const deleteHandler = ingredient => {\n    dispatch(deleteIngredient(id, ingredient._id));\n    console.log(id, ingredient._id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Add, {\n      onClick: addHandler,\n      children: /*#__PURE__*/_jsxDEV(RiAddLine, {\n        className: \"add\",\n        fontSize: \"40px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: recipe.ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(IngredientRow, {\n        children: [/*#__PURE__*/_jsxDEV(IngredientCards, {\n          ingredient: ingredient,\n          recipeId: id\n        }, ingredient._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Delete, {\n          onClick: () => deleteHandler(ingredient),\n          children: /*#__PURE__*/_jsxDEV(FaTrash, {\n            fontSize: \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 81\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this))\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Ingredients, \"T/QAYc7ULtCUSA3EuQeTI/i8bB8=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector, useSelector, useDispatch, useNavigate];\n});\n\n_c5 = Ingredients;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"Add\");\n$RefreshReg$(_c3, \"IngredientRow\");\n$RefreshReg$(_c4, \"Delete\");\n$RefreshReg$(_c5, \"Ingredients\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/Ingredients.jsx"],"names":["React","useEffect","useDispatch","useSelector","styled","FaTrash","RiAddLine","LoadingBox","MessageBox","useNavigate","useParams","addIngredient","deleteIngredient","detailsRecipe","ADD_INGREDIENT_RESET","DELETE_INGREDIENT_RESET","INGREDIENT_UPDATE_RESET","IngredientCards","PageWrapper","div","Add","button","IngredientRow","Delete","Ingredients","id","recipeDetails","state","loading","error","recipe","ingredientAdd","success","successAdd","ingredientDelete","successDelete","ingredientUpdate","successUpdate","dispatch","navigate","type","addHandler","deleteHandler","ingredient","_id","console","log","ingredients","map"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport {FaTrash} from 'react-icons/fa';\r\nimport {RiAddLine} from 'react-icons/ri';\r\n\r\n// Component Imports\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { addIngredient, deleteIngredient, detailsRecipe } from '../actions/recipeActions';\r\nimport { ADD_INGREDIENT_RESET, DELETE_INGREDIENT_RESET, INGREDIENT_UPDATE_RESET } from '../constants/recipeConstants';\r\nimport IngredientCards from '../components/IngredientCards';\r\n\r\nconst PageWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 2%;\r\n\r\n    h1 {\r\n        font-size: 40px;\r\n        color: white;\r\n        text-align: center;\r\n    }\r\n\r\n    h3 {\r\n        color: white;\r\n        margin-left: 25%;\r\n        font-size: 30px;\r\n    }\r\n    \r\n`;\r\n\r\nconst Add = styled.button`\r\n    width: 10%;\r\n    margin: 0 0 1% 25%;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: green;\r\n    padding: 5px;\r\n\r\n    &:hover .add {\r\n        transform: scale(1.1);\r\n        transition: transform ease-in-out 1s;\r\n    }\r\n`;\r\n\r\nconst IngredientRow = styled.div`\r\n    display: flex;\r\n    margin-bottom: 2%;\r\n`;\r\n\r\nconst Delete = styled.button`\r\n    margin-left: 20px;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    background-color: red;\r\n    cursor: pointer;\r\n    outline: none;\r\n`;\r\n\r\nexport default function Ingredients() {\r\n\r\n    const {id} = useParams();\r\n\r\n    const recipeDetails = useSelector(state => state.recipeDetails);\r\n    const {loading, error, recipe} = recipeDetails;\r\n\r\n    const ingredientAdd = useSelector(state => state.ingredientAdd);\r\n    const {success: successAdd} = ingredientAdd;\r\n\r\n    const ingredientDelete = useSelector(state => state.ingredientDelete);\r\n    const {success: successDelete} = ingredientDelete;\r\n\r\n    const ingredientUpdate = useSelector(state => state.ingredientUpdate);\r\n    const {success: successUpdate} = ingredientUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (successAdd) {\r\n            dispatch({type: ADD_INGREDIENT_RESET});\r\n            dispatch(detailsRecipe(id));\r\n        }\r\n\r\n        if (successDelete) {\r\n            dispatch({type: DELETE_INGREDIENT_RESET});\r\n            dispatch(detailsRecipe(id));\r\n        }\r\n\r\n        if (successUpdate) {\r\n            dispatch({type: INGREDIENT_UPDATE_RESET});\r\n            dispatch(detailsRecipe(id));\r\n        }\r\n\r\n        dispatch(detailsRecipe(id));\r\n    }, [dispatch, navigate, id, successAdd, successDelete, successUpdate]);\r\n\r\n    const addHandler = () => {\r\n        dispatch(addIngredient(id));\r\n    }\r\n\r\n    const deleteHandler = (ingredient) => {\r\n        dispatch(deleteIngredient(id, ingredient._id));\r\n        console.log(id, ingredient._id);\r\n    }\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <h1>Ingredients</h1>\r\n            <Add onClick = {addHandler}><RiAddLine className = 'add' fontSize = '40px'/></Add>\r\n            {loading ? (<LoadingBox />)\r\n                :\r\n            error ? (<MessageBox variant = 'danger'>{error}</MessageBox>)\r\n                :\r\n                (\r\n                <>\r\n                    {recipe.ingredients.map(ingredient => (\r\n                        <IngredientRow>\r\n                            <IngredientCards key = {ingredient._id} ingredient = {ingredient} recipeId = {id}/>\r\n                            <Delete onClick = {() => deleteHandler(ingredient)}><FaTrash fontSize = '30px' /></Delete>\r\n                        </IngredientRow>\r\n                    ))}\r\n                </>\r\n            )}\r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}