{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { contactListReducer } from './reducers/contactReducer';\nimport { userDetailsReducer, userSigninReducer, userUpdateReducer } from './reducers/userReducers';\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  }\n};\nconst reducer = combineReducers({\n  userSignin: userSigninReducer,\n  userDetails: userDetailsReducer,\n  userUpdate: userUpdateReducer,\n  contactList: contactListReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","contactListReducer","userDetailsReducer","userSigninReducer","userUpdateReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","reducer","userDetails","userUpdate","contactList","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAA0CC,OAA1C,EAAmDC,WAAnD,QAAqE,OAArE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,EAAgDC,iBAAhD,QAAyE,yBAAzE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACJC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADI,GAEJ;AAHE;AADK,CAArB;AAQA,MAAMG,OAAO,GAAGf,eAAe,CAAC;AAC5BS,EAAAA,UAAU,EAAEH,iBADgB;AAE5BU,EAAAA,WAAW,EAAEX,kBAFe;AAG5BY,EAAAA,UAAU,EAAEV,iBAHgB;AAI5BW,EAAAA,WAAW,EAAEd;AAJe,CAAD,CAA/B;AAQA,MAAMe,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CpB,OAAvE;AACA,MAAMqB,KAAK,GAAGpB,WAAW,CAACa,OAAD,EAAUP,YAAV,EAAwBW,eAAe,CAACpB,eAAe,CAACI,KAAD,CAAhB,CAAvC,CAAzB;AAEA,eAAemB,KAAf","sourcesContent":["import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { contactListReducer } from './reducers/contactReducer';\r\nimport { userDetailsReducer, userSigninReducer, userUpdateReducer } from './reducers/userReducers';\r\n\r\nconst initialState = {\r\n    userSignin: {\r\n        userInfo: localStorage.getItem('userInfo')\r\n            ? JSON.parse(localStorage.getItem('userInfo'))\r\n            : null,\r\n    },\r\n};\r\n\r\nconst reducer = combineReducers({\r\n    userSignin: userSigninReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdate: userUpdateReducer,\r\n    contactList: contactListReducer,\r\n\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}