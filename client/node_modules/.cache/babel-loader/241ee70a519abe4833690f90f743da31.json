{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\components\\\\DirectionCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { updateDirection } from '../actions/recipeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IngredientCards(props) {\n  _s();\n\n  const [task, setTask] = useState('');\n  const [height, setHeight] = useState('60px');\n  const {\n    direction\n  } = props;\n  const {\n    recipeId\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setTask(direction.task);\n    setHeight(direction.task.length / 2);\n  }, [direction]);\n\n  const submitHandler = () => {\n    dispatch(updateDirection(recipeId, {\n      _id: direction._id,\n      task\n    }));\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setTask(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DirectionCard, {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: direction._id,\n      autoFocus: true,\n      value: task,\n      onChange: e => setTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(IngredientCards, \"fUfMVkIUG6+Hx6eVwEpeMN/cORY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = IngredientCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientCards\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/components/DirectionCards.js"],"names":["React","useEffect","useState","useRef","useDispatch","styled","updateDirection","IngredientCards","props","task","setTask","height","setHeight","direction","recipeId","dispatch","length","submitHandler","_id","handleChange","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,eAAR,QAA8B,0BAA9B;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,MAAD,CAApC;AAEA,QAAM;AAACW,IAAAA;AAAD,MAAcL,KAApB;AACA,QAAM;AAACM,IAAAA;AAAD,MAAaN,KAAnB;AACA,QAAMO,QAAQ,GAAGX,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAACG,SAAS,CAACJ,IAAX,CAAP;AACAG,IAAAA,SAAS,CAACC,SAAS,CAACJ,IAAV,CAAeO,MAAf,GAAwB,CAAzB,CAAT;AACH,GAHQ,EAGN,CAACH,SAAD,CAHM,CAAT;;AAOA,QAAMI,aAAa,GAAG,MAAM;AACxBF,IAAAA,QAAQ,CAACT,eAAe,CAACQ,QAAD,EAAW;AAC/BI,MAAAA,GAAG,EAAEL,SAAS,CAACK,GADgB;AAE/BT,MAAAA;AAF+B,KAAX,CAAhB,CAAR;AAIH,GALD;;AAOA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEAX,IAAAA,OAAO,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AAEH,GALD;;AAOA,sBACI,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAEN,aAAzB;AAAA,4BACI;AACI,MAAA,EAAE,EAAIJ,SAAS,CAACK,GADpB;AAEI,MAAA,SAAS,MAFb;AAGI,MAAA,KAAK,EAAIT,IAHb;AAII,MAAA,QAAQ,EAAKW,CAAD,IAAOV,OAAO,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAQ,MAAA,IAAI,EAAG,QAAf;AAAwB,MAAA,MAAM;AAA9B;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAzCuBhB,e;UAOHH,W;;;KAPGG,e","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {updateDirection} from '../actions/recipeActions';\r\n\r\nexport default function IngredientCards(props) {\r\n\r\n    const [task, setTask] = useState('');\r\n    const [height, setHeight] = useState('60px');\r\n\r\n    const {direction} = props;\r\n    const {recipeId} = props;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setTask(direction.task);\r\n        setHeight(direction.task.length / 2);\r\n    }, [direction]);\r\n\r\n    \r\n\r\n    const submitHandler = () => {\r\n        dispatch(updateDirection(recipeId, {\r\n            _id: direction._id,\r\n            task\r\n        }));\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        setTask(e.target.value);\r\n        \r\n    }\r\n\r\n    return (\r\n        <DirectionCard onSubmit={submitHandler}>\r\n            <textarea\r\n                id = {direction._id}\r\n                autoFocus\r\n                value = {task}\r\n                onChange = {(e) => setTask(e.target.value)}\r\n            />\r\n            <button type = 'submit' hidden />\r\n        </DirectionCard>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}