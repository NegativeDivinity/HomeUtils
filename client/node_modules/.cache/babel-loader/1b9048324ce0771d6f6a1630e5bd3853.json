{"ast":null,"code":"import axios from 'axios';\nimport { GROCERY_ADD_FAIL, GROCERY_ADD_REQUEST, GROCERY_ADD_SUCCEED, GROCERY_DELETE_FAIL, GROCERY_DELETE_REQUEST, GROCERY_DELETE_SUCCEED, GROCERY_DETAILS_FAIL, GROCERY_DETAILS_REQUEST, GROCERY_DETAILS_SUCCEED, GROCERY_DETAILS_UPDATE_FAIL, GROCERY_DETAILS_UPDATE_REQUEST, GROCERY_DETAILS_UPDATE_SUCCEED, GROCERY_LIST_FAIL, GROCERY_LIST_REQUEST, GROCERY_LIST_SUCCEED } from '../constants/groceryConstants';\nexport const listGrocery = () => async dispatch => {\n  dispatch({\n    type: GROCERY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get('/grocery');\n    dispatch({\n      type: GROCERY_LIST_SUCCEED,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GROCERY_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsGrocery = groceryId => async (dispatch, getState) => {\n  dispatch({\n    type: GROCERY_DETAILS_REQUEST,\n    payload: groceryId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/grocery/${groceryId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: GROCERY_DETAILS_SUCCEED,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GROCERY_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const addGrocery = () => async (dispatch, getState) => {\n  dispatch({\n    type: GROCERY_ADD_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.post('/grocery', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: GROCERY_ADD_SUCCEED,\n      payload: data.grocery\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GROCERY_ADD_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateGrocery = grocery => async (dispatch, getState) => {\n  dispatch({\n    type: GROCERY_DETAILS_UPDATE_REQUEST,\n    payload: grocery\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/grocery/${grocery._id}`, grocery, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: GROCERY_DETAILS_UPDATE_SUCCEED,\n      payload: data.grocery\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GROCERY_DETAILS_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteGrocery = groceryId => async (dispatch, getState) => {\n  dispatch({\n    type: GROCERY_DELETE_REQUEST,\n    payload: groceryId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.delete(`/grocery/${groceryId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: GROCERY_DELETE_SUCCEED\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GROCERY_DELETE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/actions/groceryActions.js"],"names":["axios","GROCERY_ADD_FAIL","GROCERY_ADD_REQUEST","GROCERY_ADD_SUCCEED","GROCERY_DELETE_FAIL","GROCERY_DELETE_REQUEST","GROCERY_DELETE_SUCCEED","GROCERY_DETAILS_FAIL","GROCERY_DETAILS_REQUEST","GROCERY_DETAILS_SUCCEED","GROCERY_DETAILS_UPDATE_FAIL","GROCERY_DETAILS_UPDATE_REQUEST","GROCERY_DETAILS_UPDATE_SUCCEED","GROCERY_LIST_FAIL","GROCERY_LIST_REQUEST","GROCERY_LIST_SUCCEED","listGrocery","dispatch","type","data","get","payload","error","message","response","detailsGrocery","groceryId","getState","userSignin","userInfo","headers","Authorization","token","addGrocery","post","grocery","updateGrocery","put","_id","deleteGrocery","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    GROCERY_ADD_FAIL,\r\n    GROCERY_ADD_REQUEST,\r\n    GROCERY_ADD_SUCCEED,\r\n    GROCERY_DELETE_FAIL,\r\n    GROCERY_DELETE_REQUEST,\r\n    GROCERY_DELETE_SUCCEED,\r\n    GROCERY_DETAILS_FAIL,\r\n    GROCERY_DETAILS_REQUEST,\r\n    GROCERY_DETAILS_SUCCEED,\r\n    GROCERY_DETAILS_UPDATE_FAIL,\r\n    GROCERY_DETAILS_UPDATE_REQUEST,\r\n    GROCERY_DETAILS_UPDATE_SUCCEED,\r\n    GROCERY_LIST_FAIL,\r\n    GROCERY_LIST_REQUEST, GROCERY_LIST_SUCCEED,\r\n} from '../constants/groceryConstants';\r\n\r\nexport const listGrocery = () => async (dispatch) => {\r\n    dispatch({type: GROCERY_LIST_REQUEST});\r\n\r\n    try {\r\n        const {data} = await axios.get('/grocery');\r\n        dispatch({type: GROCERY_LIST_SUCCEED, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: GROCERY_LIST_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const detailsGrocery = (groceryId) => async (dispatch, getState) => {\r\n    dispatch({type: GROCERY_DETAILS_REQUEST, payload: groceryId});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.get(`/grocery/${groceryId}`, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: GROCERY_DETAILS_SUCCEED, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: GROCERY_DETAILS_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const addGrocery = () => async (dispatch, getState) => {\r\n    dispatch({type: GROCERY_ADD_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.post('/grocery', {}, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: GROCERY_ADD_SUCCEED, payload: data.grocery});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: GROCERY_ADD_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const updateGrocery = (grocery) => async (dispatch, getState) => {\r\n    dispatch({type: GROCERY_DETAILS_UPDATE_REQUEST, payload: grocery});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.put(`/grocery/${grocery._id}`, grocery, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: GROCERY_DETAILS_UPDATE_SUCCEED, payload: data.grocery});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: GROCERY_DETAILS_UPDATE_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const deleteGrocery = (groceryId) => async (dispatch, getState) => {\r\n    dispatch({type: GROCERY_DELETE_REQUEST, payload: groceryId});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.delete(`/grocery/${groceryId}`, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: GROCERY_DELETE_SUCCEED});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: GROCERY_DELETE_FAIL, payload: message});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}