{"ast":null,"code":"import _slicedToArray from\"C:/Users/Skele/Documents/GitHub/HomeUtils/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/Skele/Documents/GitHub/HomeUtils/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useState}from\"react\";import{useNavigate}from\"react-router\";import styled from\"styled-components\";import{GrUpdate}from'react-icons/gr';import{useEffect}from\"react\";import{useDispatch}from\"react-redux\";import{updateDirection,updateIngredient}from\"../actions/recipeActions\";import{useSelector}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var IngredientCard=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    width: 50%;\\n    margin-left: 25%;\\n    border: solid black 2px;\\n    border-radius: 10px;\\n    font-size: 20px;\\n    text-decoration: none;\\n    color: white;\\n    background-color: rgb(73, 73, 77); \\n    cursor: pointer;\\n    padding: 0 30px 0 30px;\\n\\n    input {\\n        background-color: rgb(73, 73, 77); \\n        outline: none;\\n        height: 60%;\\n        font-size: 30px;\\n        color: white;\\n        padding: 5px;\\n        border: none;\\n    }\\n\\n    input::-webkit-outer-spin-button,\\n    input::-webkit-inner-spin-button {\\n        -webkit-appearance: none;\\n        margin: 0;\\n    }\\n\\n    div {\\n        display: flex;\\n        width: 20%;\\n        height: 100%;\\n        justify-content: right;\\n        align-items: center;\\n    }\\n\"])));var Number=styled.input(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    width: 40%;\\n    margin-right: 10%;\\n\\n    -webkit-outer-spin-button,\\n    -webkit-inner-spin-button {\\n        -webkit-appearance: none;\\n    }\\n\"])));var MetricI=styled.select(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    width: 60%;\\n    height: 70%;\\n    outline: none;\\n    border: none;\\n\"])));var Update=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    margin-left: 20px;\\n    border: solid black 2px;\\n    border-radius: 10px;\\n    cursor: pointer;\\n    outline: none;\\n    background-color: green;\\n\"])));export default function IngredientCards(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),quantity=_useState4[0],setQuantity=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),metric=_useState6[0],setMetric=_useState6[1];var ingredient=props.ingredient;var recipeId=props.recipeId;var dispatch=useDispatch();useEffect(function(){setName(ingredient.name);setQuantity(ingredient.quantity);setMetric(ingredient.metric);},[ingredient]);var updateHandler=function updateHandler(ingredient){dispatch(updateIngredient(recipeId,{_id:ingredient._id,name:name,quantity:quantity,metric:metric}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(IngredientCard,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",value:name,onChange:function onChange(e){return setName(e.target.value);}}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Number,{type:\"number\",id:\"quantity\",value:quantity,onChange:function onChange(e){return setQuantity(e.target.value);}}),/*#__PURE__*/_jsxs(MetricI,{id:\"metric\",value:metric,onChange:function onChange(e){return setMetric(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"box\",children:\"Box\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cup\",children:\"Cups\"}),/*#__PURE__*/_jsx(\"option\",{value:\"tbsp\",children:\"Tbsp\"}),/*#__PURE__*/_jsx(\"option\",{value:\"tsp\",children:\"Tsp\"})]})]})]},ingredient._id),/*#__PURE__*/_jsx(Update,{onClick:function onClick(){return updateHandler(ingredient);},children:/*#__PURE__*/_jsx(GrUpdate,{fontSize:\"30px\"})})]});}","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/components/IngredientCards.js"],"names":["React","useState","useNavigate","styled","GrUpdate","useEffect","useDispatch","updateDirection","updateIngredient","useSelector","IngredientCard","button","Number","input","MetricI","select","Update","IngredientCards","props","name","setName","quantity","setQuantity","metric","setMetric","ingredient","recipeId","dispatch","updateHandler","_id","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport {GrUpdate} from 'react-icons/gr';\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateDirection, updateIngredient } from \"../actions/recipeActions\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst IngredientCard = styled.button`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 50%;\r\n    margin-left: 25%;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    font-size: 20px;\r\n    text-decoration: none;\r\n    color: white;\r\n    background-color: rgb(73, 73, 77); \r\n    cursor: pointer;\r\n    padding: 0 30px 0 30px;\r\n\r\n    input {\r\n        background-color: rgb(73, 73, 77); \r\n        outline: none;\r\n        height: 60%;\r\n        font-size: 30px;\r\n        color: white;\r\n        padding: 5px;\r\n        border: none;\r\n    }\r\n\r\n    input::-webkit-outer-spin-button,\r\n    input::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        width: 20%;\r\n        height: 100%;\r\n        justify-content: right;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst Number = styled.input`\r\n    width: 40%;\r\n    margin-right: 10%;\r\n\r\n    -webkit-outer-spin-button,\r\n    -webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n    }\r\n`;\r\n\r\nconst MetricI = styled.select`\r\n    width: 60%;\r\n    height: 70%;\r\n    outline: none;\r\n    border: none;\r\n`;\r\n\r\nconst Update = styled.button`\r\n    margin-left: 20px;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: green;\r\n`;\r\n\r\nexport default function IngredientCards(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [metric, setMetric] = useState('');\r\n\r\n    const {ingredient} = props;\r\n    const {recipeId} = props;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setName(ingredient.name);\r\n        setQuantity(ingredient.quantity);\r\n        setMetric(ingredient.metric);\r\n    }, [ingredient])\r\n\r\n    const updateHandler = (ingredient) => {\r\n        dispatch(updateIngredient(recipeId, {\r\n            _id: ingredient._id,\r\n            name,\r\n            quantity,\r\n            metric,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IngredientCard key = {ingredient._id} >\r\n                <input \r\n                    type=\"text\" \r\n                    id = 'name'\r\n                    value = {name}\r\n                    onChange = {(e) => setName(e.target.value)}\r\n                />\r\n                <div>\r\n                    <Number\r\n                        type = 'number'\r\n                        id = 'quantity'\r\n                        value = {quantity}\r\n                        onChange = {(e) => setQuantity(e.target.value)}\r\n                    />\r\n                    <MetricI\r\n                        id = 'metric'\r\n                        value = {metric}\r\n                        onChange = {(e) => setMetric(e.target.value)}\r\n                    >\r\n                        <option value=\"box\">Box</option>\r\n                        <option value=\"cup\">Cups</option>\r\n                        <option value=\"tbsp\">Tbsp</option>\r\n                        <option value=\"tsp\">Tsp</option>\r\n                    </MetricI>\r\n                </div>\r\n            </IngredientCard>\r\n            <Update onClick = {() => updateHandler(ingredient)}><GrUpdate fontSize = '30px' /></Update>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}