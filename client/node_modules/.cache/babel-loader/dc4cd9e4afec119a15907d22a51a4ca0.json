{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\UserEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router';\nimport styled from 'styled-components';\nimport { detailsUser, updateUser } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_DETAILS_UPDATE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.div`\n    margin-top: 2%;\n    color: white;\n`;\n_c = PageWrapper;\nconst UserEditForm = styled.form`\n    splay: flex;\n    flex-direction: column;\n    margin: 0 0 1% 30%;\n    width: 40%;\n    border: solid black 3px;\n    padding: 10px;\n    border-radius: 10px;\n    background-color: rgb(73, 73, 77);\n\n    h1 {\n        text-align: center;\n    }\n\n    div {\n        display: flex;\n        justify-content: space-between;\n        padding: 15px;\n        color: white;\n        font-size: 20px;\n\n        input {\n            padding: 5px;\n            width: 50%;\n            border-radius: 10px;\n            outline: none;\n            border: none;\n        }\n    }\n`;\n_c2 = UserEditForm;\nconst Submit = styled.button`\n    width: 80%;\n    margin: 2% 0 0 10%;\n    border-radius: 10px;\n    padding: 10px;\n    cursor: pointer;\n\n    &:hover {\n        opacity: 0.7;\n    }\n`;\n_c3 = Submit;\nexport default function UserEdit() {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading: loadingDetail,\n    error: errorDetail,\n    user\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    success\n  } = userUpdate;\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  useEffect(() => {\n    if (success) {\n      dispatch({\n        type: USER_DETAILS_UPDATE_RESET\n      });\n      navigate('/users');\n    }\n\n    if (!user) {\n      dispatch(detailsUser(id));\n    } else {\n      setFirstName(user.firstName);\n      setLastName(user.lastName);\n      setUserName(user.userName);\n      setEmail(user.email);\n    }\n  }, [dispatch, user, id, navigate, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Passwords do not match!');\n    } else {\n      dispatch(updateUser({\n        userId: user._id,\n        firstName,\n        lastName,\n        userName,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(UserEditForm, {\n      onSubmit: submitHandler,\n      children: loadingDetail ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }, this) : errorDetail ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstName\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastName\",\n            value: lastName,\n            onChange: e => setLastName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"userName\",\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"userName\",\n            value: userName,\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Submit, {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 8\n  }, this);\n}\n\n_s(UserEdit, \"nGyBcY1e8z6WwtpOOVFU9heipDY=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector, useSelector];\n});\n\n_c4 = UserEdit;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"UserEditForm\");\n$RefreshReg$(_c3, \"Submit\");\n$RefreshReg$(_c4, \"UserEdit\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/UserEdit.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","useParams","styled","detailsUser","updateUser","LoadingBox","MessageBox","USER_DETAILS_UPDATE_RESET","PageWrapper","div","UserEditForm","form","Submit","button","UserEdit","dispatch","navigate","id","userDetails","state","loading","loadingDetail","error","errorDetail","user","userUpdate","success","firstName","setFirstName","lastName","setLastName","userName","setUserName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","type","submitHandler","e","preventDefault","alert","userId","_id","name","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport { detailsUser, updateUser } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { USER_DETAILS_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst PageWrapper = styled.div`\r\n    margin-top: 2%;\r\n    color: white;\r\n`;\r\n\r\nconst UserEditForm = styled.form`\r\n    splay: flex;\r\n    flex-direction: column;\r\n    margin: 0 0 1% 30%;\r\n    width: 40%;\r\n    border: solid black 3px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    background-color: rgb(73, 73, 77);\r\n\r\n    h1 {\r\n        text-align: center;\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 15px;\r\n        color: white;\r\n        font-size: 20px;\r\n\r\n        input {\r\n            padding: 5px;\r\n            width: 50%;\r\n            border-radius: 10px;\r\n            outline: none;\r\n            border: none;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Submit = styled.button`\r\n    width: 80%;\r\n    margin: 2% 0 0 10%;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nexport default function UserEdit() {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const {id} = useParams();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const {loading: loadingDetail, error: errorDetail, user} = userDetails;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const {success} = userUpdate;\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        if (success) {\r\n            dispatch({type: USER_DETAILS_UPDATE_RESET});\r\n            navigate('/users');\r\n        }\r\n\r\n        if (!user) {\r\n            dispatch(detailsUser(id));\r\n        } else {\r\n            setFirstName(user.firstName);\r\n            setLastName(user.lastName);\r\n            setUserName(user.userName);\r\n            setEmail(user.email);\r\n        }\r\n\r\n    }, [dispatch, user, id, navigate, success]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            alert('Passwords do not match!')\r\n        } else {\r\n            dispatch(updateUser({userId: \r\n                user._id, \r\n                firstName, \r\n                lastName, \r\n                userName, \r\n                email, \r\n                password,\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n       <PageWrapper>\r\n           <UserEditForm onSubmit = {submitHandler}>\r\n                {loadingDetail ? (\r\n                        <LoadingBox />\r\n                    ) : errorDetail ? (\r\n                        <MessageBox variant = 'danger'>{errorDetail}</MessageBox>\r\n                    ) :\r\n                        <>\r\n                            <h1>{user.name}</h1>\r\n                            <div>\r\n                                <label htmlFor=\"firstName\">First Name: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'firstName'\r\n                                    value = {firstName} \r\n                                    onChange = {(e) => setFirstName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"lastName\">Last Name: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'lastName' \r\n                                    value = {lastName} \r\n                                    onChange = {(e) => setLastName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"userName\">Username: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'userName' \r\n                                    value = {userName} \r\n                                    onChange = {(e) => setUserName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\">Email: </label>\r\n                                <input \r\n                                    type=\"email\" \r\n                                    id = 'email' \r\n                                    value = {email} \r\n                                    onChange = {(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"password\">Password: </label>\r\n                                <input \r\n                                    type=\"password\" \r\n                                    id = 'password' \r\n                                    value={password} \r\n                                    onChange = {(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"confirmPassword\">Confirm Password: </label>\r\n                                <input \r\n                                    type=\"password\" \r\n                                    id = 'confirmPassword' \r\n                                    value={confirmPassword} \r\n                                    onChange = {(e) => setConfirmPassword(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Submit type = 'submit'>Update</Submit>\r\n                        </>\r\n                }\r\n            </UserEditForm>\r\n       </PageWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}