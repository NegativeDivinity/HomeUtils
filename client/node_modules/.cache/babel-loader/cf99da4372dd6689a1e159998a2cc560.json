{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\components\\\\todoItemCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport styled from \"styled-components\";\nimport Timer from \"./Timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemCard = styled.button`\n    display: flex;\n    justify-content: space-between;\n    width: 50%;\n    margin-left: 1%;\n    border: solid black 2px;\n    border-radius: 10px;\n    font-size: 20px;\n    text-decoration: none;\n    color: white;\n    background-color: rgb(73, 73, 77); \n    cursor: pointer;\n\n    p {\n        padding: 0 30px 0 30px;\n    }\n`;\n_c = ItemCard;\nexport default function TodoItemCard(props) {\n  _s();\n\n  const {\n    item\n  } = props;\n  const {\n    time\n  } = props;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(detailsItem({\n      _id: item._id,\n      itemTime\n    }));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(ItemCard, {\n    onClick: () => navigate(`/grouptodo/${item._id}/edit`),\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, item._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoItemCard, \"C8M3Qnh2JtuXRaZXcPUyNRrk+zo=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c2 = TodoItemCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ItemCard\");\n$RefreshReg$(_c2, \"TodoItemCard\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/components/todoItemCard.js"],"names":["React","useEffect","useDispatch","useNavigate","styled","Timer","ItemCard","button","TodoItemCard","props","item","time","navigate","dispatch","detailsItem","_id","itemTime","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,QAAQ,GAAGF,MAAM,CAACG,MAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;KAAMD,Q;AAkBN,eAAe,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAExC,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAf;AACA,QAAM;AAACE,IAAAA;AAAD,MAASF,KAAf;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGX,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ,CAACC,WAAW,CAAC;AAACC,MAAAA,GAAG,EAAEL,IAAI,CAACK,GAAX;AAAgBC,MAAAA;AAAhB,KAAD,CAAZ,CAAR;AACH,GAFQ,EAEN,CAACH,QAAD,CAFM,CAAT;AAIA,sBACI,QAAC,QAAD;AAA2B,IAAA,OAAO,EAAI,MAAMD,QAAQ,CAAE,cAAaF,IAAI,CAACK,GAAI,OAAxB,CAApD;AAAA,2BACI;AAAA,gBAAIL,IAAI,CAACO;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ,KAAiBP,IAAI,CAACK,GAAtB;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAjBuBP,Y;UAIHL,W,EACAD,W;;;MALGM,Y","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport Timer from \"./Timer\";\r\n\r\nconst ItemCard = styled.button`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 50%;\r\n    margin-left: 1%;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    font-size: 20px;\r\n    text-decoration: none;\r\n    color: white;\r\n    background-color: rgb(73, 73, 77); \r\n    cursor: pointer;\r\n\r\n    p {\r\n        padding: 0 30px 0 30px;\r\n    }\r\n`;\r\n\r\nexport default function TodoItemCard(props) {\r\n\r\n    const {item} = props;\r\n    const {time} = props;\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsItem({_id: item._id, itemTime}));\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <ItemCard key = {item._id} onClick = {() => navigate(`/grouptodo/${item._id}/edit`)}>\r\n            <p>{item.title}</p>\r\n            \r\n        </ItemCard>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}