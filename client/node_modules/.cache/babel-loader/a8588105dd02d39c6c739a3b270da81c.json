{"ast":null,"code":"import _slicedToArray from\"C:/Users/Skele/Documents/GitHub/HomeUtils/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/Skele/Documents/GitHub/HomeUtils/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{useNavigate,useParams}from'react-router';import styled from'styled-components';import{detailsItem,updateItem}from'../actions/todoActions';import LoadingBox from'../components/LoadingBox';import MessageBox from'../components/MessageBox';import{TODO_UPDATE_RESET}from'../constants/todoConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PageWrapper=styled.form(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    margin: 2% 0 1% 30%;\\n    color: white;\\n    width: 40%;\\n    border: solid black 3px;\\n    padding: 10px;\\n    border-radius: 10px;\\n    background-color: rgb(73, 73, 77);\\n\\n    h1 {\\n        text-align: center;\\n    }\\n\\n    div {\\n        display: flex;\\n        justify-content: space-between;\\n        padding: 15px;\\n        color: white;\\n        font-size: 20px;\\n\\n        input {\\n            padding: 5px;\\n            width: 50%;\\n            border-radius: 10px;\\n            outline: none;\\n            border: none;\\n        }\\n\\n        select {\\n            padding: 5px;\\n            width: 50%;\\n            outline: none;\\n            border: none;\\n        }\\n    }\\n\"])));var Submit=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    width: 80%;\\n    margin: 2% 0 0 10%;\\n    border-radius: 10px;\\n    padding: 10px;\\n    cursor: pointer;\\n\\n    &:hover {\\n        opacity: 0.7;\\n    }\\n\"])));export default function GroupToDoEdit(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),date=_useState4[0],setDate=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),occur=_useState6[0],setOccur=_useState6[1];var _useParams=useParams(),id=_useParams.id;var dispatch=useDispatch();var navigate=useNavigate();var itemDetails=useSelector(function(state){return state.itemDetails;});var loading=itemDetails.loading,error=itemDetails.error,item=itemDetails.item;var itemUpdate=useSelector(function(state){return state.itemUpdate;});var success=itemUpdate.success;useEffect(function(){if(success){dispatch({type:TODO_UPDATE_RESET});navigate('/grouptodo');}if(!item){dispatch(detailsItem(id));}else{setTitle(item.title);setOccur(item.itemOccur);}},[dispatch,id,success,navigate,item]);var autoFill=function autoFill(e){e.preventDefault();var datetime=new Date().toLocaleString();setDate(datetime);};var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateItem({_id:id,title:title,date:date,occur:occur}));};return/*#__PURE__*/_jsxs(PageWrapper,{onSubmit:submitHandler,children:[loading?/*#__PURE__*/_jsx(LoadingBox,{}):error?/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:item.title}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title\",children:\"Title: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"title\",value:title,onChange:function onChange(e){return setTitle(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"date\",children:\"Done Last: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"date\",placeholder:\"MM/DD/YYYY H:M:S AM/PM\",value:date,onChange:function onChange(e){return setDate(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"occur\",children:\"Occurrence: \"}),/*#__PURE__*/_jsxs(\"select\",{id:\"occur\",value:occur,onChange:function onChange(e){return setOccur(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"daily\",children:\"Daily\"}),/*#__PURE__*/_jsx(\"option\",{value:\"alternate\",children:\"Every Other\"}),/*#__PURE__*/_jsx(\"option\",{value:\"weekly\",children:\"Weekly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"monthly\",children:\"Monthly\"})]})]}),/*#__PURE__*/_jsx(Submit,{onClick:autoFill,children:\"Autofill Date\"})]}),/*#__PURE__*/_jsx(Submit,{type:\"submit\",children:\"Update\"})]});}","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/GroupToDoEdit.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","useParams","styled","detailsItem","updateItem","LoadingBox","MessageBox","TODO_UPDATE_RESET","PageWrapper","form","Submit","button","GroupToDoEdit","title","setTitle","date","setDate","occur","setOccur","id","dispatch","navigate","itemDetails","state","loading","error","item","itemUpdate","success","type","itemOccur","autoFill","e","preventDefault","datetime","Date","toLocaleString","submitHandler","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport { detailsItem, updateItem } from '../actions/todoActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { TODO_UPDATE_RESET } from '../constants/todoConstants';\r\n\r\nconst PageWrapper = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 2% 0 1% 30%;\r\n    color: white;\r\n    width: 40%;\r\n    border: solid black 3px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    background-color: rgb(73, 73, 77);\r\n\r\n    h1 {\r\n        text-align: center;\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 15px;\r\n        color: white;\r\n        font-size: 20px;\r\n\r\n        input {\r\n            padding: 5px;\r\n            width: 50%;\r\n            border-radius: 10px;\r\n            outline: none;\r\n            border: none;\r\n        }\r\n\r\n        select {\r\n            padding: 5px;\r\n            width: 50%;\r\n            outline: none;\r\n            border: none;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Submit = styled.button`\r\n    width: 80%;\r\n    margin: 2% 0 0 10%;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nexport default function GroupToDoEdit() {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [occur, setOccur] = useState('');\r\n\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const itemDetails = useSelector(state => state.itemDetails);\r\n    const {loading, error, item} = itemDetails;\r\n\r\n    const itemUpdate = useSelector(state => state.itemUpdate);\r\n    const {success} = itemUpdate;\r\n\r\n    useEffect(() => {\r\n\r\n        if (success) {\r\n            dispatch({type: TODO_UPDATE_RESET});\r\n            navigate('/grouptodo')\r\n        }\r\n\r\n        if (!item) {\r\n            dispatch(detailsItem(id));\r\n        } else {\r\n            setTitle(item.title);\r\n            setOccur(item.itemOccur);\r\n        }\r\n        \r\n    }, [dispatch, id, success, navigate, item]);\r\n\r\n    const autoFill = (e) => {\r\n        e.preventDefault();\r\n\r\n        let datetime = new Date().toLocaleString();\r\n        setDate(datetime);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(updateItem({_id: id, title, date, occur}));\r\n    }\r\n\r\n    return (\r\n        <PageWrapper onSubmit = {submitHandler}>\r\n            {loading ? (\r\n                <LoadingBox />\r\n            ) : error ? (\r\n                <MessageBox variant = 'danger'>{error}</MessageBox>\r\n            ) : (\r\n                <>\r\n                    <h1>{item.title}</h1>\r\n                    <div>\r\n                        <label htmlFor=\"title\">Title: </label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id = 'title'\r\n                            value = {title}\r\n                            onChange = {(e) => setTitle(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"date\">Done Last: </label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id = 'date'\r\n                            placeholder = 'MM/DD/YYYY H:M:S AM/PM'\r\n                            value = {date}\r\n                            onChange = {(e) => setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"occur\">Occurrence: </label>\r\n                        <select id=\"occur\" value = {occur} onChange = {(e) => setOccur(e.target.value)}>\r\n                            <option value=\"daily\">Daily</option>\r\n                            <option value=\"alternate\">Every Other</option>\r\n                            <option value=\"weekly\">Weekly</option>\r\n                            <option value=\"monthly\">Monthly</option>\r\n                        </select>\r\n                    </div>\r\n                    <Submit onClick = {autoFill}>Autofill Date</Submit>\r\n                </>\r\n            )}\r\n            <Submit type = 'submit'>Update</Submit>\r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}