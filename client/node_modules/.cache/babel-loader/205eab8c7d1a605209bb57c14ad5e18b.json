{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\components\\\\IngredientCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport styled from \"styled-components\";\nimport { GrUpdate } from 'react-icons/gr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IngredientCard = styled.button`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 50%;\n    margin-left: 25%;\n    border: solid black 2px;\n    border-radius: 10px;\n    font-size: 20px;\n    text-decoration: none;\n    color: white;\n    background-color: rgb(73, 73, 77); \n    cursor: pointer;\n    padding: 0 30px 0 30px;\n\n    input {\n        background-color: rgb(73, 73, 77); \n        outline: none;\n        height: 60%;\n        font-size: 30px;\n        color: white;\n        padding: 5px;\n    }\n\n    div {\n        display: flex;\n        width: 20%;\n        height: 100%;\n        justify-content: right;\n        align-items: center;\n    }\n`;\n_c = IngredientCard;\nconst Number = styled.input`\n    width: 20%;\n    margin-right: 15%;\n\n    -webkit-outer-spin-button\n`;\n_c2 = Number;\nconst MetricI = styled.select`\n    width: 60%;\n    height: 70%;\n    outline: none;\n    border: none;\n`;\n_c3 = MetricI;\nconst Update = styled.button`\n    margin-left: 20px;\n    border: solid black 2px;\n    border-radius: 10px;\n    cursor: pointer;\n    outline: none;\n    background-color: green;\n`;\n_c4 = Update;\nexport default function IngredientCards(props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [metric, setMetric] = useState('');\n  const {\n    ingredient\n  } = props;\n  const {\n    recipeId\n  } = props;\n  const navigate = useNavigate();\n\n  const updateHandler = ingredient => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IngredientCard, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Number, {\n          type: \"number\",\n          id: \"quantity\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MetricI, {\n          id: \"metric\",\n          value: metric,\n          onChange: e => setMetric(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cup\",\n            children: \"Cups\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"tbsp\",\n            children: \"Tbsp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"tsp\",\n            children: \"Tsp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, ingredient._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Update, {\n      onClick: () => updateHandler(ingredient),\n      children: /*#__PURE__*/_jsxDEV(GrUpdate, {\n        fontSize: \"30px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(IngredientCards, \"RsVLbcJTruqHjNUcgPkkZHVPACo=\", false, function () {\n  return [useNavigate];\n});\n\n_c5 = IngredientCards;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"IngredientCard\");\n$RefreshReg$(_c2, \"Number\");\n$RefreshReg$(_c3, \"MetricI\");\n$RefreshReg$(_c4, \"Update\");\n$RefreshReg$(_c5, \"IngredientCards\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/components/IngredientCards.js"],"names":["React","useState","useNavigate","styled","GrUpdate","IngredientCard","button","Number","input","MetricI","select","Update","IngredientCards","props","name","setName","quantity","setQuantity","metric","setMetric","ingredient","recipeId","navigate","updateHandler","e","target","value","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;;;AAEA,MAAMC,cAAc,GAAGF,MAAM,CAACG,MAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/BA;KAAMD,c;AAiCN,MAAME,MAAM,GAAGJ,MAAM,CAACK,KAAM;AAC5B;AACA;AACA;AACA;AACA,CALA;MAAMD,M;AAON,MAAME,OAAO,GAAGN,MAAM,CAACO,MAAO;AAC9B;AACA;AACA;AACA;AACA,CALA;MAAMD,O;AAON,MAAME,MAAM,GAAGR,MAAM,CAACG,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMK,M;AASN,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM;AAACmB,IAAAA;AAAD,MAAeP,KAArB;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAaR,KAAnB;AACA,QAAMS,QAAQ,GAAGpB,WAAW,EAA5B;;AAEA,QAAMqB,aAAa,GAAIH,UAAD,IAAgB,CAErC,CAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,cAAD;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAG,MAFT;AAGI,QAAA,KAAK,EAAIN,IAHb;AAII,QAAA,QAAQ,EAAKU,CAAD,IAAOT,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,gCACI,QAAC,MAAD;AACI,UAAA,IAAI,EAAG,QADX;AAEI,UAAA,EAAE,EAAG,UAFT;AAGI,UAAA,KAAK,EAAIV,QAHb;AAII,UAAA,QAAQ,EAAKQ,CAAD,IAAOP,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAJlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,OAAD;AACI,UAAA,EAAE,EAAG,QADT;AAEI,UAAA,KAAK,EAAIR,MAFb;AAGI,UAAA,QAAQ,EAAKM,CAAD,IAAOL,SAAS,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAHhC;AAAA,kCAKI;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA,OAAuBN,UAAU,CAACO,GAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eA0BI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAI,MAAMJ,aAAa,CAACH,UAAD,CAAtC;AAAA,6BAAoD,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAG;AAArB;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA,kBADJ;AA8BH;;GA5CuBR,e;UAQHV,W;;;MARGU,e","sourcesContent":["import React, {useState} from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport {GrUpdate} from 'react-icons/gr';\r\n\r\nconst IngredientCard = styled.button`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 50%;\r\n    margin-left: 25%;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    font-size: 20px;\r\n    text-decoration: none;\r\n    color: white;\r\n    background-color: rgb(73, 73, 77); \r\n    cursor: pointer;\r\n    padding: 0 30px 0 30px;\r\n\r\n    input {\r\n        background-color: rgb(73, 73, 77); \r\n        outline: none;\r\n        height: 60%;\r\n        font-size: 30px;\r\n        color: white;\r\n        padding: 5px;\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        width: 20%;\r\n        height: 100%;\r\n        justify-content: right;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst Number = styled.input`\r\n    width: 20%;\r\n    margin-right: 15%;\r\n\r\n    -webkit-outer-spin-button\r\n`;\r\n\r\nconst MetricI = styled.select`\r\n    width: 60%;\r\n    height: 70%;\r\n    outline: none;\r\n    border: none;\r\n`;\r\n\r\nconst Update = styled.button`\r\n    margin-left: 20px;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: green;\r\n`;\r\n\r\nexport default function IngredientCards(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [metric, setMetric] = useState('');\r\n\r\n    const {ingredient} = props;\r\n    const {recipeId} = props;\r\n    const navigate = useNavigate();\r\n\r\n    const updateHandler = (ingredient) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IngredientCard key = {ingredient._id} >\r\n                <input \r\n                    type=\"text\" \r\n                    id = 'name'\r\n                    value = {name}\r\n                    onChange = {(e) => setName(e.target.value)}\r\n                />\r\n                <div>\r\n                    <Number\r\n                        type = 'number'\r\n                        id = 'quantity'\r\n                        value = {quantity}\r\n                        onChange = {(e) => setQuantity(e.target.value)}\r\n                    />\r\n                    <MetricI\r\n                        id = 'metric'\r\n                        value = {metric}\r\n                        onChange = {(e) => setMetric(e.target.value)}\r\n                    >\r\n                        <option value=\"cup\">Cups</option>\r\n                        <option value=\"tbsp\">Tbsp</option>\r\n                        <option value=\"tsp\">Tsp</option>\r\n                    </MetricI>\r\n                </div>\r\n            </IngredientCard>\r\n            <Update onClick = {() => updateHandler(ingredient)}><GrUpdate fontSize = '30px' /></Update>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}