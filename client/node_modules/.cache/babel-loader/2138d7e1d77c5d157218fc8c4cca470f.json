{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\ContactEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { detailsContact, updateContact } from '../actions/contactActions';\nimport { useNavigate, useParams } from 'react-router';\nimport { CONTACT_DETAILS_RESET, CONTACT_UPDATE_RESET } from '../constants/contactConstants';\nimport { detailsUser } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.div`\n    margin-top: 2%;\n    color: white;\n`;\n_c = PageWrapper;\nconst ContactEditForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    margin: 0 0 1% 30%;\n    width: 40%;\n    border: solid black 3px;\n    padding: 10px;\n    border-radius: 10px;\n    background-color: rgb(73, 73, 77);\n\n    h1 {\n        text-align: center;\n    }\n\n    div {\n        display: flex;\n        justify-content: space-between;\n        padding: 15px;\n        color: white;\n        font-size: 20px;\n\n        input {\n            padding: 5px;\n            width: 50%;\n            border-radius: 10px;\n            outline: none;\n            border: none;\n        }\n    }\n`;\n_c2 = ContactEditForm;\nconst Submit = styled.button`\n    width: 80%;\n    margin: 2% 0 0 10%;\n    border-radius: 10px;\n    padding: 10px;\n    cursor: pointer;\n\n    &:hover {\n        opacity: 0.7;\n    }\n`;\n_c3 = Submit;\nexport default function ContactEdit() {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const {\n    cid\n  } = useParams();\n  const [name, setName] = useState('');\n  const [nickName, setNickName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [job, setJob] = useState('');\n  const [company, setCompany] = useState('');\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const contactDetails = useSelector(state => state.contactDetails);\n  const {\n    loading: loadingDetail,\n    error: errorDetail,\n    contact\n  } = contactDetails;\n  const contactUpdate = useSelector(state => state.contactUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = contactUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: CONTACT_UPDATE_RESET\n      });\n      dispatch(detailsContact(id));\n      navigate('/contact');\n    }\n\n    dispatch(detailsUser(id));\n    dispatch(detailsContact(id, cid));\n  }, [dispatch, id, user, successUpdate, navigate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateContact({\n      _id: user.contact._id,\n      name,\n      nickName,\n      phone,\n      email,\n      job,\n      company\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(ContactEditForm, {\n      onSubmit: submitHandler,\n      children: loadingDetail ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }, this) : errorDetail ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: contact.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nickName\",\n            children: \"Nickname: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nickName\",\n            value: nickName,\n            onChange: e => setNickName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"phone\",\n            value: phone,\n            onChange: e => setPhone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"job\",\n            children: \"Job: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"job\",\n            value: job,\n            onChange: e => setJob(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"company\",\n            children: \"Company: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"company\",\n            value: company,\n            onChange: e => setCompany(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Submit, {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }, this), successUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n          children: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: errorUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContactEdit, \"uk9neqAXFcMA5UZB8jvATPAjwgw=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useParams, useSelector, useSelector, useSelector];\n});\n\n_c4 = ContactEdit;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"ContactEditForm\");\n$RefreshReg$(_c3, \"Submit\");\n$RefreshReg$(_c4, \"ContactEdit\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/ContactEdit.jsx"],"names":["React","useEffect","useState","styled","useDispatch","useSelector","LoadingBox","MessageBox","detailsContact","updateContact","useNavigate","useParams","CONTACT_DETAILS_RESET","CONTACT_UPDATE_RESET","detailsUser","PageWrapper","div","ContactEditForm","form","Submit","button","ContactEdit","dispatch","navigate","id","cid","name","setName","nickName","setNickName","phone","setPhone","email","setEmail","job","setJob","company","setCompany","userDetails","state","loading","error","user","contactDetails","loadingDetail","errorDetail","contact","contactUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","submitHandler","e","preventDefault","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { detailsContact, updateContact } from '../actions/contactActions';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { CONTACT_DETAILS_RESET, CONTACT_UPDATE_RESET } from '../constants/contactConstants';\r\nimport { detailsUser } from '../actions/userActions';\r\n\r\nconst PageWrapper = styled.div`\r\n    margin-top: 2%;\r\n    color: white;\r\n`;\r\n\r\nconst ContactEditForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 0 1% 30%;\r\n    width: 40%;\r\n    border: solid black 3px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    background-color: rgb(73, 73, 77);\r\n\r\n    h1 {\r\n        text-align: center;\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 15px;\r\n        color: white;\r\n        font-size: 20px;\r\n\r\n        input {\r\n            padding: 5px;\r\n            width: 50%;\r\n            border-radius: 10px;\r\n            outline: none;\r\n            border: none;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Submit = styled.button`\r\n    width: 80%;\r\n    margin: 2% 0 0 10%;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nexport default function ContactEdit() {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const {id} = useParams();\r\n    const {cid} = useParams();\r\n\r\n    const [name, setName] = useState('');\r\n    const [nickName, setNickName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [job, setJob] = useState('');\r\n    const [company, setCompany] = useState('');\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const {loading, error, user} = userDetails;\r\n\r\n    const contactDetails = useSelector(state => state.contactDetails);\r\n    const {loading: loadingDetail, error: errorDetail, contact} = contactDetails;\r\n\r\n    const contactUpdate = useSelector(state => state.contactUpdate);\r\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = contactUpdate;\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({type: CONTACT_UPDATE_RESET});\r\n            dispatch(detailsContact(id));\r\n            navigate('/contact')\r\n        }\r\n        \r\n        \r\n        \r\n\r\n        dispatch(detailsUser(id));\r\n        dispatch(detailsContact(id, cid));\r\n    }, [dispatch, id, user, successUpdate, navigate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(updateContact({_id: user.contact._id, name, nickName, phone, email, job, company}));\r\n    }\r\n\r\n    return (\r\n        <PageWrapper>\r\n            {loadingUpdate && <LoadingBox />}\r\n            <ContactEditForm onSubmit = {submitHandler}>\r\n                {loadingDetail ? (\r\n                        <LoadingBox />\r\n                    ) : errorDetail ? (\r\n                        <MessageBox variant = 'danger'>{errorDetail}</MessageBox>\r\n                    ) :\r\n                        <>\r\n                            <h1>{contact.phone}</h1>\r\n                            <div>\r\n                                <label htmlFor=\"name\">Name: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'name'\r\n                                    value = {name} \r\n                                    onChange = {(e) => setName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"nickName\">Nickname: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'nickName' \r\n                                    value = {nickName} \r\n                                    onChange = {(e) => setNickName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"phone\">Phone: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'phone' \r\n                                    value = {phone} \r\n                                    onChange = {(e) => setPhone(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\">Email: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'email' \r\n                                    value = {email} \r\n                                    onChange = {(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"job\">Job: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'job' \r\n                                    value={job} \r\n                                    onChange = {(e) => setJob(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"company\">Company: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'company' \r\n                                    value={company} \r\n                                    onChange = {(e) => setCompany(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Submit type = 'submit'>Update</Submit>\r\n                            {successUpdate && <MessageBox>success</MessageBox>}\r\n                        </>\r\n                }\r\n            </ContactEditForm>\r\n            {errorUpdate && <MessageBox variant = 'danger'>{errorUpdate}</MessageBox>}\r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}