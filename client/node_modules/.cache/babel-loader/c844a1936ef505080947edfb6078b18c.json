{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_CONTACT_FAIL, ADD_CONTACT_REQUEST, ADD_CONTACT_SUCCESS, CONTACT_DETAILS_FAIL, CONTACT_DETAILS_REQUEST, CONTACT_DETAILS_SUCCESS, CONTACT_LIST_FAIL, CONTACT_LIST_REQUEST, CONTACT_LIST_SUCCESS, CONTACT_UPDATE_REQUEST, CONTACT_UPDATE_SUCCESS, DELETE_CONTACT_FAIL, DELETE_CONTACT_REQUEST, DELETE_CONTACT_SUCCESS } from \"../constants/contactConstants\";\nexport const listContact = () => async (dispatch, getState) => {\n  dispatch({\n    type: CONTACT_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get('/contact', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: CONTACT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: CONTACT_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsContact = contactId => async dispatch => {\n  dispatch({\n    type: CONTACT_DETAILS_REQUEST,\n    payload: contactId\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(`/contact/${contactId}`);\n    dispatch({\n      type: CONTACT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: CONTACT_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateContact = contact => async (dispatch, getState) => {\n  dispatch({\n    type: CONTACT_UPDATE_REQUEST,\n    payload: contact\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/contact/update`, contact, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: CONTACT_UPDATE_SUCCESS,\n      payload: contact\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: CONT,\n      payload: message\n    });\n  }\n};\nexport const addContact = () => async (dispatch, getState) => {\n  dispatch({\n    type: ADD_CONTACT_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.post('/contact', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ADD_CONTACT_SUCCESS,\n      payload: data.contact\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ADD_CONTACT_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteContact = contactId => async (dispatch, getState) => {\n  dispatch({\n    type: DELETE_CONTACT_REQUEST,\n    payload: contactId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.delete(`/contact/${contactId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: DELETE_CONTACT_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: DELETE_CONTACT_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/HomeUtils/client/src/actions/contactAction.js"],"names":["axios","ADD_CONTACT_FAIL","ADD_CONTACT_REQUEST","ADD_CONTACT_SUCCESS","CONTACT_DETAILS_FAIL","CONTACT_DETAILS_REQUEST","CONTACT_DETAILS_SUCCESS","CONTACT_LIST_FAIL","CONTACT_LIST_REQUEST","CONTACT_LIST_SUCCESS","CONTACT_UPDATE_REQUEST","CONTACT_UPDATE_SUCCESS","DELETE_CONTACT_FAIL","DELETE_CONTACT_REQUEST","DELETE_CONTACT_SUCCESS","listContact","dispatch","getState","type","userSignin","userInfo","data","get","headers","Authorization","token","payload","error","message","response","detailsContact","contactId","updateContact","contact","put","CONT","addContact","post","deleteContact","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,mBAAhD,EAAqEC,oBAArE,EAA2FC,uBAA3F,EAAoHC,uBAApH,EAA6IC,iBAA7I,EAAgKC,oBAAhK,EAAsLC,oBAAtL,EAA4MC,sBAA5M,EAAoOC,sBAApO,EAA4PC,mBAA5P,EAAiRC,sBAAjR,EAAySC,sBAAzS,QAAuU,+BAAvU;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;AAC1DD,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEV;AAAP,GAAD,CAAR;AACA,QAAM;AAACW,IAAAA,UAAU,EAAE;AAACC,MAAAA;AAAD;AAAb,MAA2BH,QAAQ,EAAzC;;AAEA,MAAI;AACA,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMrB,KAAK,CAACsB,GAAN,CAAU,UAAV,EAAsB;AACvCC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAAzC;AAD8B,KAAtB,CAArB;AAGAT,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAET,oBAAP;AAA6BiB,MAAAA,OAAO,EAAEL;AAAtC,KAAD,CAAR;AACH,GALD,CAKE,OAAOM,KAAP,EAAc;AACZ,UAAMC,OAAO,GAAGD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBO,OAAtC,GACVD,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBO,OADV,GAEVD,KAAK,CAACC,OAFZ;AAGAZ,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEX,iBAAP;AAA0BmB,MAAAA,OAAO,EAAEE;AAAnC,KAAD,CAAR;AACH;AACJ,CAfM;AAiBP,OAAO,MAAME,cAAc,GAAIC,SAAD,IAAe,MAAMf,QAAN,IAAmB;AAC5DA,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEb,uBAAP;AAAgCqB,IAAAA,OAAO,EAAEK;AAAzC,GAAD,CAAR;;AAEA,MAAI;AACA,UAAM;AAACV,MAAAA;AAAD,QAAS,MAAMrB,KAAK,CAACsB,GAAN,CAAW,YAAWS,SAAU,EAAhC,CAArB;AACAf,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEZ,uBAAP;AAAgCoB,MAAAA,OAAO,EAAEL;AAAzC,KAAD,CAAR;AACH,GAHD,CAGE,OAAOM,KAAP,EAAc;AACZ,UAAMC,OAAO,GAAGD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBO,OAAtC,GACVD,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBO,OADV,GAEVD,KAAK,CAACC,OAFZ;AAGAZ,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEd,oBAAP;AAA6BsB,MAAAA,OAAO,EAAEE;AAAtC,KAAD,CAAR;AACH;AACJ,CAZM;AAcP,OAAO,MAAMI,aAAa,GAAIC,OAAD,IAAa,OAAMjB,QAAN,EAAgBC,QAAhB,KAA6B;AACnED,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAER,sBAAP;AAA+BgB,IAAAA,OAAO,EAAEO;AAAxC,GAAD,CAAR;AACA,QAAM;AAACd,IAAAA,UAAU,EAAE;AAACC,MAAAA;AAAD;AAAb,MAA2BH,QAAQ,EAAzC;;AAEA,MAAI;AACA,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMrB,KAAK,CAACkC,GAAN,CAAW,iBAAX,EAA6BD,OAA7B,EAAsC;AACvDV,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAAzC;AAD8C,KAAtC,CAArB;AAGAT,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEP,sBAAP;AAA+Be,MAAAA,OAAO,EAAEO;AAAxC,KAAD,CAAR;AACH,GALD,CAKE,OAAON,KAAP,EAAc;AACZ,UAAMC,OAAO,GAAGD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBO,OAAtC,GACVD,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBO,OADV,GAEVD,KAAK,CAACC,OAFZ;AAGAZ,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEiB,IAAP;AAAaT,MAAAA,OAAO,EAAEE;AAAtB,KAAD,CAAR;AACH;AACJ,CAfM;AAiBP,OAAO,MAAMQ,UAAU,GAAG,MAAM,OAAMpB,QAAN,EAAgBC,QAAhB,KAA6B;AACzDD,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEhB;AAAP,GAAD,CAAR;AACA,QAAM;AAACiB,IAAAA,UAAU,EAAE;AAACC,MAAAA;AAAD;AAAb,MAA2BH,QAAQ,EAAzC;;AAEA,MAAI;AACA,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMrB,KAAK,CAACqC,IAAN,CAAW,UAAX,EAAuB,EAAvB,EAA2B;AAC5Cd,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAAzC;AADmC,KAA3B,CAArB;AAGAT,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEf,mBAAP;AAA4BuB,MAAAA,OAAO,EAAEL,IAAI,CAACY;AAA1C,KAAD,CAAR;AACH,GALD,CAKE,OAAON,KAAP,EAAc;AACZ,UAAMC,OAAO,GAAGD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBO,OAAtC,GACVD,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBO,OADV,GAEVD,KAAK,CAACC,OAFZ;AAGAZ,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEjB,gBAAP;AAAyByB,MAAAA,OAAO,EAAEE;AAAlC,KAAD,CAAR;AACH;AACJ,CAfM;AAiBP,OAAO,MAAMU,aAAa,GAAIP,SAAD,IAAe,OAAMf,QAAN,EAAgBC,QAAhB,KAA6B;AACrED,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEL,sBAAP;AAA+Ba,IAAAA,OAAO,EAAEK;AAAxC,GAAD,CAAR;AACA,QAAM;AAACZ,IAAAA,UAAU,EAAE;AAACC,MAAAA;AAAD;AAAb,MAA2BH,QAAQ,EAAzC;;AAEA,MAAI;AACA,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMrB,KAAK,CAACuC,MAAN,CAAc,YAAWR,SAAU,EAAnC,EAAsC;AACvDR,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAAzC;AAD8C,KAAtC,CAArB;AAGAT,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEJ;AAAP,KAAD,CAAR;AACH,GALD,CAKE,OAAOa,KAAP,EAAc;AACZ,UAAMC,OAAO,GAAGD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBO,OAAtC,GACVD,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBO,OADV,GAEVD,KAAK,CAACC,OAFZ;AAGAZ,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEN,mBAAP;AAA4Bc,MAAAA,OAAO,EAAEE;AAArC,KAAD,CAAR;AACH;AACJ,CAfM","sourcesContent":["import axios from \"axios\";\r\nimport { ADD_CONTACT_FAIL, ADD_CONTACT_REQUEST, ADD_CONTACT_SUCCESS, CONTACT_DETAILS_FAIL, CONTACT_DETAILS_REQUEST, CONTACT_DETAILS_SUCCESS, CONTACT_LIST_FAIL, CONTACT_LIST_REQUEST, CONTACT_LIST_SUCCESS, CONTACT_UPDATE_REQUEST, CONTACT_UPDATE_SUCCESS, DELETE_CONTACT_FAIL, DELETE_CONTACT_REQUEST, DELETE_CONTACT_SUCCESS } from \"../constants/contactConstants\";\r\n\r\nexport const listContact = () => async(dispatch, getState) => {\r\n    dispatch({type: CONTACT_LIST_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.get('/contact', {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: CONTACT_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: CONTACT_LIST_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const detailsContact = (contactId) => async(dispatch) => {\r\n    dispatch({type: CONTACT_DETAILS_REQUEST, payload: contactId});\r\n\r\n    try {\r\n        const {data} = await axios.get(`/contact/${contactId}`);\r\n        dispatch({type: CONTACT_DETAILS_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: CONTACT_DETAILS_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const updateContact = (contact) => async(dispatch, getState) => {\r\n    dispatch({type: CONTACT_UPDATE_REQUEST, payload: contact});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.put(`/contact/update`, contact, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: CONTACT_UPDATE_SUCCESS, payload: contact});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: CONT, payload: message});\r\n    }\r\n}\r\n\r\nexport const addContact = () => async(dispatch, getState) => {\r\n    dispatch({type: ADD_CONTACT_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.post('/contact', {}, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: ADD_CONTACT_SUCCESS, payload: data.contact});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: ADD_CONTACT_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const deleteContact = (contactId) => async(dispatch, getState) => {\r\n    dispatch({type: DELETE_CONTACT_REQUEST, payload: contactId});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.delete(`/contact/${contactId}`, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: DELETE_CONTACT_SUCCESS});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: DELETE_CONTACT_FAIL, payload: message});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}