{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { detailsUser, updateUser } from \"../actions/userActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { USER_DETAILS_UPDATE_RESET } from \"../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.div`\n    text-align: center;\n    margin-top: 2%;\n    \n    h1 {\n        font-size: 40px;\n        color: white;\n    }\n`;\n_c = PageWrapper;\nconst Forms = styled.div`\n    display: flex;\n    margin-left: 10%;\n`;\n_c2 = Forms;\nconst ProfileForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 35%;\n    margin-left: 5%;\n    border: solid black 3px;\n    padding: 10px;\n    border-radius: 10px;\n    background-color: rgb(73, 73, 77);\n    \n    h3 {\n        color: white;\n        font-size: 25px;\n    }\n\n    div {\n        display: flex;\n        justify-content: space-between;\n        padding: 15px;\n        color: white;\n        font-size: 20px;\n\n        input {\n            padding: 5px;\n            width: 50%;\n            border-radius: 10px;\n            outline: none;\n            border: none;\n        }\n    }\n`;\n_c3 = ProfileForm;\nconst Submit = styled.button`\n    width: 80%;\n    margin: 2% 0 0 10%;\n    border-radius: 10px;\n    padding: 10px;\n    cursor: pointer;\n\n    &:hover {\n        opacity: 0.7;\n    }\n`;\n_c4 = Submit;\nconst Notify = styled.div`\n    width: 40%;\n    margin-left: 31%;\n`;\n_c5 = Notify;\nexport default function Profile() {\n  _s();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate;\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [company, setCompany] = useState('');\n  const [jobTitle, setJobTitle] = useState('');\n  const [birthday, setBirthday] = useState('');\n  const [medicalWarning, setMedicalWarning] = useState('');\n  const [favMovie, setFavMovie] = useState('');\n  const [favSong, setFavSong] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch({\n        type: USER_DETAILS_UPDATE_RESET\n      });\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      setFirstName(user.firstName);\n      setLastName(user.lastName);\n      setUserName(user.userName);\n      setEmail(user.email);\n      setCompany(user.company);\n      setJobTitle(user.jobTitle);\n      setBirthday(user.birthday);\n      setMedicalWarning(user.medicalWarning);\n    }\n  }, [dispatch, userInfo._id, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Passwords do not match!');\n    } else {\n      dispatch(updateUser({\n        userId: user._id,\n        firstName,\n        lastName,\n        userName,\n        email,\n        password,\n        company,\n        jobTitle,\n        birthday,\n        medicalWarning,\n        favMovie,\n        favSong\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Notify, {\n      children: [errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }, this), successUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"success\",\n        children: \"Profile Updated Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Forms, {\n      children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ProfileForm, {\n          onSubmit: submitHandler,\n          children: [loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"User Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstName\",\n              children: \"First Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"firstName\",\n              value: firstName,\n              onChange: e => setFirstName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lastName\",\n              children: \"Last Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"lastName\",\n              value: lastName,\n              onChange: e => setLastName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"userName\",\n              children: \"Username: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"userName\",\n              value: userName,\n              onChange: e => setUserName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"New Password: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm Password: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Submit, {\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ProfileForm, {\n          onSubmit: submitHandler,\n          children: [loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Bio Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"company\",\n              children: \"Company: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"company\",\n              value: company,\n              onChange: e => setCompany(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"jobTitle\",\n              children: \"Job Title: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"jobTitle\",\n              value: jobTitle,\n              onChange: e => setJobTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"birthday\",\n              children: \"Birthday: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"birthday\",\n              value: birthday,\n              onChange: e => setBirthday(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"hobbies\",\n              children: \"Hobbies: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"hobbies\",\n              value: medicalWarning,\n              onChange: e => setMedicalWarning(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"favMovie\",\n              children: \"Favorite Movie: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"favMovie\",\n              value: favMovie,\n              onChange: e => setFavMovie(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"favSong\",\n              children: \"Favorite Song: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"favSong\",\n              value: favSong,\n              onChange: e => setFavSong(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Submit, {\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, 'profilePage', true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"2WJQHmTeIdCmjbjxjuj8RTR3L8s=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c6 = Profile;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"Forms\");\n$RefreshReg$(_c3, \"ProfileForm\");\n$RefreshReg$(_c4, \"Submit\");\n$RefreshReg$(_c5, \"Notify\");\n$RefreshReg$(_c6, \"Profile\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/Profile.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","styled","detailsUser","updateUser","LoadingBox","MessageBox","USER_DETAILS_UPDATE_RESET","PageWrapper","div","Forms","ProfileForm","form","Submit","button","Notify","Profile","userSignin","state","userInfo","userDetails","loading","error","user","userUpdate","loadingUpdate","errorUpdate","success","successUpdate","firstName","setFirstName","lastName","setLastName","userName","setUserName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","company","setCompany","jobTitle","setJobTitle","birthday","setBirthday","medicalWarning","setMedicalWarning","favMovie","setFavMovie","favSong","setFavSong","dispatch","type","_id","submitHandler","e","preventDefault","alert","userId","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { detailsUser, updateUser } from \"../actions/userActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { USER_DETAILS_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst PageWrapper = styled.div`\r\n    text-align: center;\r\n    margin-top: 2%;\r\n    \r\n    h1 {\r\n        font-size: 40px;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst Forms = styled.div`\r\n    display: flex;\r\n    margin-left: 10%;\r\n`;\r\n\r\nconst ProfileForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 35%;\r\n    margin-left: 5%;\r\n    border: solid black 3px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    background-color: rgb(73, 73, 77);\r\n    \r\n    h3 {\r\n        color: white;\r\n        font-size: 25px;\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 15px;\r\n        color: white;\r\n        font-size: 20px;\r\n\r\n        input {\r\n            padding: 5px;\r\n            width: 50%;\r\n            border-radius: 10px;\r\n            outline: none;\r\n            border: none;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Submit = styled.button`\r\n    width: 80%;\r\n    margin: 2% 0 0 10%;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst Notify = styled.div`\r\n    width: 40%;\r\n    margin-left: 31%;\r\n`;\r\n\r\nexport default function Profile() {\r\n    \r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const {loading, error, user} = userDetails;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = userUpdate;\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [company, setCompany] = useState('');\r\n    const [jobTitle, setJobTitle] = useState('');\r\n    const [birthday, setBirthday] = useState('');\r\n    const [medicalWarning, setMedicalWarning] = useState('');\r\n    const [favMovie, setFavMovie] = useState('');\r\n    const [favSong, setFavSong] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            dispatch({type: USER_DETAILS_UPDATE_RESET});\r\n            dispatch(detailsUser(userInfo._id));\r\n        } else {\r\n            setFirstName(user.firstName);\r\n            setLastName(user.lastName);\r\n            setUserName(user.userName);\r\n            setEmail(user.email);\r\n            setCompany(user.company);\r\n            setJobTitle(user.jobTitle);\r\n            setBirthday(user.birthday);\r\n            setMedicalWarning(user.medicalWarning);\r\n            \r\n        }\r\n    }, [dispatch, userInfo._id, user]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            alert('Passwords do not match!')\r\n        } else {\r\n            dispatch(updateUser({userId: \r\n                user._id, \r\n                firstName, \r\n                lastName, \r\n                userName, \r\n                email, \r\n                password,\r\n                company,\r\n                jobTitle,\r\n                birthday,\r\n                medicalWarning,\r\n                favMovie,\r\n                favSong\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PageWrapper key = 'profilePage'>\r\n            <h1>Profile</h1>\r\n            <Notify>\r\n                {errorUpdate && <MessageBox variant = 'danger'>{errorUpdate}</MessageBox>}\r\n                {successUpdate && <MessageBox variant = 'success'>Profile Updated Successfully</MessageBox>}\r\n            </Notify>\r\n            <Forms>\r\n                {loading ? ( \r\n                    <LoadingBox /> \r\n                ) : error ? (\r\n                    <MessageBox variant = 'danger'>{error}</MessageBox>\r\n                ) : (\r\n                    <>\r\n                        <ProfileForm onSubmit = {submitHandler}>\r\n                            {loadingUpdate && <LoadingBox />}\r\n                            <h3>User Form</h3>\r\n                            <div>\r\n                                <label htmlFor=\"firstName\">First Name: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'firstName'\r\n                                    value = {firstName} \r\n                                    onChange = {(e) => setFirstName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"lastName\">Last Name: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'lastName' \r\n                                    value = {lastName} \r\n                                    onChange = {(e) => setLastName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"userName\">Username: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'userName' \r\n                                    value = {userName} \r\n                                    onChange = {(e) => setUserName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\">Email: </label>\r\n                                <input \r\n                                    type=\"email\" \r\n                                    id = 'email' \r\n                                    value = {email} \r\n                                    onChange = {(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"password\">New Password: </label>\r\n                                <input \r\n                                    type=\"password\" \r\n                                    id = 'password' \r\n                                    value={password} \r\n                                    onChange = {(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"confirmPassword\">Confirm Password: </label>\r\n                                <input \r\n                                    type=\"password\" \r\n                                    id = 'confirmPassword' \r\n                                    value={confirmPassword} \r\n                                    onChange = {(e) => setConfirmPassword(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Submit type = 'submit'>Update</Submit>\r\n                        </ProfileForm>\r\n                        <ProfileForm onSubmit = {submitHandler}>\r\n                            {loadingUpdate && <LoadingBox />}\r\n                            <h3>Bio Form</h3>\r\n                            <div>\r\n                                <label htmlFor=\"company\">Company: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'company'\r\n                                    value = {company} \r\n                                    onChange = {(e) => setCompany(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"jobTitle\">Job Title: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'jobTitle' \r\n                                    value = {jobTitle} \r\n                                    onChange = {(e) => setJobTitle(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"birthday\">Birthday: </label>\r\n                                <input \r\n                                    type=\"date\" \r\n                                    id = 'birthday' \r\n                                    value = {birthday} \r\n                                    onChange = {(e) => setBirthday(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"hobbies\">Hobbies: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'hobbies' \r\n                                    value = {medicalWarning} \r\n                                    onChange = {(e) => setMedicalWarning(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"favMovie\">Favorite Movie: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'favMovie' \r\n                                    value={favMovie} \r\n                                    onChange = {(e) => setFavMovie(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"favSong\">Favorite Song: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'favSong' \r\n                                    value={favSong} \r\n                                    onChange = {(e) => setFavSong(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Submit type = 'submit'>Update</Submit>\r\n                        </ProfileForm>\r\n                    </>\r\n                )}\r\n            </Forms>\r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}