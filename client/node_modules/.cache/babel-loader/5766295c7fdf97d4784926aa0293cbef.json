{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\components\\\\IngredientCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport styled from \"styled-components\";\nimport { GrUpdate } from 'react-icons/gr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IngredientCard = styled.button`\n    display: flex;\n    justify-content: space-between;\n    width: 50%;\n    margin-left: 25%;\n    border: solid black 2px;\n    border-radius: 10px;\n    font-size: 20px;\n    text-decoration: none;\n    color: white;\n    background-color: rgb(73, 73, 77); \n    cursor: pointer;\n\n    p {\n        padding: 0 30px 0 30px;\n    }\n`;\n_c = IngredientCard;\nconst Update = styled.button`\n    margin-left: 20px;\n    border: solid black 2px;\n    border-radius: 10px;\n    cursor: pointer;\n    outline: none;\n    background-color: green;\n`;\n_c2 = Update;\nexport default function IngredientCards(props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [metric, setMetric] = useState('');\n  const {\n    ingredient\n  } = props;\n  const {\n    recipeId\n  } = props;\n  const navigate = useNavigate();\n\n  const updateHandler = ingredient => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IngredientCard, {\n      onClick: () => navigate(`/ingredient/${recipeId}/${ingredient._id}`),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [ingredient.quantity, \" \", ingredient.metric]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, ingredient._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Update, {\n      onClick: () => updateHandler(direction),\n      children: /*#__PURE__*/_jsxDEV(GrUpdate, {\n        fontSize: \"30px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(IngredientCards, \"RsVLbcJTruqHjNUcgPkkZHVPACo=\", false, function () {\n  return [useNavigate];\n});\n\n_c3 = IngredientCards;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IngredientCard\");\n$RefreshReg$(_c2, \"Update\");\n$RefreshReg$(_c3, \"IngredientCards\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/components/IngredientCards.js"],"names":["React","useState","useNavigate","styled","GrUpdate","IngredientCard","button","Update","IngredientCards","props","name","setName","quantity","setQuantity","metric","setMetric","ingredient","recipeId","navigate","updateHandler","_id","e","target","value","direction"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;;;AAEA,MAAMC,cAAc,GAAGF,MAAM,CAACG,MAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;KAAMD,c;AAkBN,MAAME,MAAM,GAAGJ,MAAM,CAACG,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMC,M;AASN,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM;AAACe,IAAAA;AAAD,MAAeP,KAArB;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAaR,KAAnB;AACA,QAAMS,QAAQ,GAAGhB,WAAW,EAA5B;;AAEA,QAAMiB,aAAa,GAAIH,UAAD,IAAgB,CAErC,CAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,cAAD;AAAuC,MAAA,OAAO,EAAI,MAAME,QAAQ,CAAE,eAAcD,QAAS,IAAGD,UAAU,CAACI,GAAI,EAA3C,CAAhE;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAG,MAFT;AAGI,QAAA,KAAK,EAAIV,IAHb;AAII,QAAA,QAAQ,EAAKW,CAAD,IAAOV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,mBAAIP,UAAU,CAACJ,QAAf,OAA0BI,UAAU,CAACF,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA,OAAuBE,UAAU,CAACI,GAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAI,MAAMD,aAAa,CAACK,SAAD,CAAtC;AAAA,6BAAmD,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAG;AAArB;AAAA;AAAA;AAAA;AAAA;AAAnD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA,kBADJ;AAcH;;GA5BuBhB,e;UAQHN,W;;;MARGM,e","sourcesContent":["import React, {useState} from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport {GrUpdate} from 'react-icons/gr';\r\n\r\nconst IngredientCard = styled.button`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 50%;\r\n    margin-left: 25%;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    font-size: 20px;\r\n    text-decoration: none;\r\n    color: white;\r\n    background-color: rgb(73, 73, 77); \r\n    cursor: pointer;\r\n\r\n    p {\r\n        padding: 0 30px 0 30px;\r\n    }\r\n`;\r\n\r\nconst Update = styled.button`\r\n    margin-left: 20px;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: green;\r\n`;\r\n\r\nexport default function IngredientCards(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [metric, setMetric] = useState('');\r\n\r\n    const {ingredient} = props;\r\n    const {recipeId} = props;\r\n    const navigate = useNavigate();\r\n\r\n    const updateHandler = (ingredient) => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IngredientCard key = {ingredient._id} onClick = {() => navigate(`/ingredient/${recipeId}/${ingredient._id}`)}>\r\n                <input \r\n                    type=\"text\" \r\n                    id = 'name'\r\n                    value = {name}\r\n                    onChange = {(e) => setName(e.target.value)}\r\n                />\r\n                <p>{ingredient.quantity} {ingredient.metric}</p>\r\n            </IngredientCard>\r\n            <Update onClick = {() => updateHandler(direction)}><GrUpdate fontSize = '30px' /></Update>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}