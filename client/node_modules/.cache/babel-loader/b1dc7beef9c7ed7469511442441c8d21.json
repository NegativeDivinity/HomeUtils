{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\GroupToDoEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router';\nimport styled from 'styled-components';\nimport { detailsItem } from '../actions/todoActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.form`\n\n`;\n_c = PageWrapper;\nexport default function GroupToDoEdit() {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const itemDetails = useSelector(state => state.itemDetails);\n  const {\n    loading,\n    error,\n    item\n  } = itemDetails;\n  useEffect(() => {\n    dispatch(detailsItem(id));\n  }, [dispatch, id]);\n\n  const autoFill = e => {\n    e.preventDefault();\n    let datetime = new Date().toLocaleString();\n    setDate(datetime);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Done Last: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: autoFill,\n          children: \"Autofill Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GroupToDoEdit, \"VZk+amPn6kJt9kS4hZ52+EVW53Q=\", false, function () {\n  return [useParams, useDispatch, useNavigate, useSelector];\n});\n\n_c2 = GroupToDoEdit;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"GroupToDoEdit\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/GroupToDoEdit.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","useParams","styled","detailsItem","LoadingBox","MessageBox","PageWrapper","form","GroupToDoEdit","title","setTitle","date","setDate","id","dispatch","navigate","itemDetails","state","loading","error","item","autoFill","e","preventDefault","datetime","Date","toLocaleString","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,cAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,IAAK;AAChC;AACA,CAFA;KAAMD,W;AAIN,eAAe,SAASE,aAAT,GAAyB;AAAA;;AAEpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM;AAACgB,IAAAA;AAAD,MAAOZ,SAAS,EAAtB;AACA,QAAMa,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,QAAQ,GAAGf,WAAW,EAA5B;AAEA,QAAMgB,WAAW,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B;AACA,QAAM;AAACE,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBJ,WAA/B;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,QAAQ,CAACX,WAAW,CAACU,EAAD,CAAZ,CAAR;AACH,GAFQ,EAEN,CAACC,QAAD,EAAWD,EAAX,CAFM,CAAT;;AAIA,QAAMQ,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,cAAX,EAAf;AACAd,IAAAA,OAAO,CAACY,QAAD,CAAP;AACH,GALD;;AAOA,sBACI,QAAC,WAAD;AAAA,cACKN,OAAO,gBACJ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADI,GAEJC,KAAK,gBACL,QAAC,UAAD;AAAY,MAAA,OAAO,EAAG,QAAtB;AAAA,gBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL;AAAA,8BACI;AAAA,kBAAKC,IAAI,CAACX;AAAV;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,EAAE,EAAG,OAFT;AAGI,UAAA,KAAK,EAAIA,KAHb;AAII,UAAA,QAAQ,EAAKa,CAAD,IAAOZ,QAAQ,CAACY,CAAC,CAACK,MAAF,CAASC,KAAV;AAJ/B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,EAAE,EAAG,MAFT;AAGI,UAAA,KAAK,EAAIjB,IAHb;AAII,UAAA,QAAQ,EAAKW,CAAD,IAAOV,OAAO,CAACU,CAAC,CAACK,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI;AAAQ,UAAA,OAAO,EAAIP,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GAvDuBb,a;UAKPP,S,EACIH,W,EACAE,W,EAEGD,W;;;MATAS,a","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport { detailsItem } from '../actions/todoActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nconst PageWrapper = styled.form`\r\n\r\n`;\r\n\r\nexport default function GroupToDoEdit() {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [date, setDate] = useState('');\r\n\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const itemDetails = useSelector(state => state.itemDetails);\r\n    const {loading, error, item} = itemDetails;\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsItem(id));\r\n    }, [dispatch, id])\r\n\r\n    const autoFill = (e) => {\r\n        e.preventDefault();\r\n\r\n        let datetime = new Date().toLocaleString();\r\n        setDate(datetime);\r\n    }\r\n\r\n    return (\r\n        <PageWrapper>\r\n            {loading ? (\r\n                <LoadingBox />\r\n            ) : error ? (\r\n                <MessageBox variant = 'danger'>{error}</MessageBox>\r\n            ) : (\r\n                <>\r\n                    <h1>{item.title}</h1>\r\n                    <div>\r\n                        <label htmlFor=\"title\">Title: </label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id = 'title'\r\n                            value = {title}\r\n                            onChange = {(e) => setTitle(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"date\">Done Last: </label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id = 'date'\r\n                            value = {date}\r\n                            onChange = {(e) => setDate(e.target.value)}\r\n                        />\r\n                        <button onClick = {autoFill}>Autofill Date</button>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}