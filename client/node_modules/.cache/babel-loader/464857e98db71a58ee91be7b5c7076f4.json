{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\GroupToDo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { RiAddLine } from 'react-icons/ri';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { addItem, listTodo } from '../actions/todoActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport TodoItemCard from '../components/todoItemCard';\nimport { GiCheckMark } from 'react-icons/gi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    margin-top: 2%;\n\n    h1 {\n        font-size: 40px;\n        color: white;\n    }\n    \n`;\n_c = PageWrapper;\nconst Add = styled.button`\n    width: 10%;\n    margin: 0 0 1% 25%;\n    border: solid black 2px;\n    border-radius: 10px;\n    cursor: pointer;\n    outline: none;\n    background-color: green;\n    padding: 5px;\n\n    &:hover .add {\n        transform: scale(1.1);\n        transition: transform ease-in-out 1s;\n    }\n`;\n_c2 = Add;\nconst ItemRow = styled.div`\n    display: flex;\n    margin-bottom: 2%;\n`;\n_c3 = ItemRow;\nconst Done = styled.button`\n    margin-left: 20px;\n    border: solid black 2px;\n    border-radius: 10px;\n    background-color: green;\n    cursor: pointer;\n    outline: none;\n`;\n_c4 = Done;\nconst Priority = styled.button`\n    border: solid black 2px;\n    margin-left: 25%;\n    border-radius: 10px;\n    background-color: green;\n    cursor: pointer;\n    outline: none;\n`;\n_c5 = Priority;\nexport default function GroupToDo() {\n  _s();\n\n  const datetime = new Date().toLocaleString();\n  const todoList = useSelector(state => state.todoList);\n  const {\n    loading,\n    error,\n    items\n  } = todoList;\n  const itemAdd = useSelector(state => state.itemAdd);\n  const {\n    loading: loadingItem,\n    error: errorItem,\n    success\n  } = itemAdd;\n  const [time, setTime] = useState(datetime);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (success) {\n      dispatch({\n        type: TODO_L\n      });\n    }\n\n    dispatch(listTodo());\n  }, [dispatch]);\n\n  const addHandler = () => {\n    dispatch(addItem());\n  };\n\n  const doneHandler = () => {\n    setTime(datetime);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Group To-Do-List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Add, {\n      onClick: addHandler,\n      children: /*#__PURE__*/_jsxDEV(RiAddLine, {\n        className: \"add\",\n        fontSize: \"40px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(ItemRow, {\n        children: [/*#__PURE__*/_jsxDEV(Priority, {\n          children: /*#__PURE__*/_jsxDEV(GiCheckMark, {\n            fontSize: \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TodoItemCard, {\n          item: item,\n          time: item.itemTime\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Done, {\n          onClick: doneHandler,\n          children: /*#__PURE__*/_jsxDEV(GiCheckMark, {\n            fontSize: \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this))\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GroupToDo, \"dlLKolI3c6TWQ5SKNHjJkvUDVLQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c6 = GroupToDo;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"Add\");\n$RefreshReg$(_c3, \"ItemRow\");\n$RefreshReg$(_c4, \"Done\");\n$RefreshReg$(_c5, \"Priority\");\n$RefreshReg$(_c6, \"GroupToDo\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/GroupToDo.jsx"],"names":["React","useEffect","useState","RiAddLine","useDispatch","useSelector","styled","addItem","listTodo","LoadingBox","MessageBox","TodoItemCard","GiCheckMark","PageWrapper","div","Add","button","ItemRow","Done","Priority","GroupToDo","datetime","Date","toLocaleString","todoList","state","loading","error","items","itemAdd","loadingItem","errorItem","success","time","setTime","dispatch","type","TODO_L","addHandler","doneHandler","map","item","itemTime","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { RiAddLine } from 'react-icons/ri';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { addItem, listTodo } from '../actions/todoActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport TodoItemCard from '../components/todoItemCard';\r\nimport { GiCheckMark } from 'react-icons/gi';\r\n\r\nconst PageWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    margin-top: 2%;\r\n\r\n    h1 {\r\n        font-size: 40px;\r\n        color: white;\r\n    }\r\n    \r\n`;\r\n\r\nconst Add = styled.button`\r\n    width: 10%;\r\n    margin: 0 0 1% 25%;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: green;\r\n    padding: 5px;\r\n\r\n    &:hover .add {\r\n        transform: scale(1.1);\r\n        transition: transform ease-in-out 1s;\r\n    }\r\n`;\r\n\r\nconst ItemRow = styled.div`\r\n    display: flex;\r\n    margin-bottom: 2%;\r\n`;\r\n\r\nconst Done = styled.button`\r\n    margin-left: 20px;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    background-color: green;\r\n    cursor: pointer;\r\n    outline: none;\r\n`;\r\n\r\nconst Priority = styled.button`\r\n    border: solid black 2px;\r\n    margin-left: 25%;\r\n    border-radius: 10px;\r\n    background-color: green;\r\n    cursor: pointer;\r\n    outline: none;\r\n`;\r\n\r\nexport default function GroupToDo() {\r\n\r\n    const datetime = new Date().toLocaleString()\r\n\r\n    const todoList = useSelector(state => state.todoList);\r\n    const {loading, error, items} = todoList;\r\n\r\n    const itemAdd = useSelector(state => state.itemAdd);\r\n    const {loading: loadingItem, error: errorItem, success} = itemAdd;\r\n\r\n    const [time, setTime] = useState(datetime);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        if (success) {\r\n            dispatch({type: TODO_L})\r\n        }\r\n\r\n        dispatch(listTodo());\r\n    }, [dispatch])\r\n\r\n    const addHandler = () => {\r\n        dispatch(addItem())\r\n    }\r\n\r\n    const doneHandler = () => {\r\n        setTime(datetime);\r\n    }\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <h1>Group To-Do-List</h1>\r\n            <Add onClick = {addHandler}><RiAddLine className = 'add' fontSize = '40px'/></Add>\r\n            {loading ? (\r\n                <LoadingBox />\r\n            ) : error ? (\r\n                <MessageBox variant = 'danger'></MessageBox>\r\n            ) : (\r\n                <>\r\n                    {items.map((item) => (\r\n                        <ItemRow>\r\n                            <Priority><GiCheckMark fontSize = '30px' /></Priority>\r\n                            <TodoItemCard key = {item._id} item = {item} time = {item.itemTime} />\r\n                            <Done onClick = {doneHandler}><GiCheckMark fontSize = '30px' /></Done>\r\n                        </ItemRow>\r\n                    ))}\r\n                </>\r\n            )}\r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}