{"ast":null,"code":"import _slicedToArray from\"C:/Users/Skele/Documents/GitHub/HomeUtils/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/Skele/Documents/GitHub/HomeUtils/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useEffect,useState}from'react';import styled from'styled-components';import{useDispatch,useSelector}from'react-redux';import LoadingBox from'../components/LoadingBox';import MessageBox from'../components/MessageBox';import{detailsContact,updateContact}from'../actions/contactActions';import{useNavigate,useParams}from'react-router';import{CONTACT_UPDATE_RESET}from'../constants/contactConstants';import PhoneInput from'../components/PhoneInput';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PageWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    margin-top: 2%;\\n    color: white;\\n\"])));var ContactEditForm=styled.form(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    margin: 0 0 1% 30%;\\n    width: 40%;\\n    border: solid black 3px;\\n    padding: 10px;\\n    border-radius: 10px;\\n    background-color: rgb(73, 73, 77);\\n\\n    h1 {\\n        text-align: center;\\n    }\\n\\n    div {\\n        display: flex;\\n        justify-content: space-between;\\n        padding: 15px;\\n        color: white;\\n        font-size: 20px;\\n\\n        input {\\n            padding: 5px;\\n            width: 50%;\\n            border-radius: 10px;\\n            outline: none;\\n            border: none;\\n        }\\n    }\\n\"])));var Submit=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    width: 80%;\\n    margin: 2% 0 0 10%;\\n    border-radius: 10px;\\n    padding: 10px;\\n    cursor: pointer;\\n\\n    &:hover {\\n        opacity: 0.7;\\n    }\\n\"])));export default function ContactEdit(){var dispatch=useDispatch();var navigate=useNavigate();var _useParams=useParams(),id=_useParams.id;var _useParams2=useParams(),cid=_useParams2.cid;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),nickName=_useState4[0],setNickName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),phone=_useState6[0],setPhone=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),email=_useState8[0],setEmail=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),job=_useState10[0],setJob=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),company=_useState12[0],setCompany=_useState12[1];var contactDetails=useSelector(function(state){return state.contactDetails;});var loadingDetail=contactDetails.loading,errorDetail=contactDetails.error,contact=contactDetails.contact;var contactUpdate=useSelector(function(state){return state.contactUpdate;});var loadingUpdate=contactUpdate.loading,errorUpdate=contactUpdate.error,successUpdate=contactUpdate.success;useEffect(function(){if(successUpdate){navigate(\"/contacts/\".concat(id));}if(!contact||contact._id!==cid||successUpdate){dispatch({type:CONTACT_UPDATE_RESET});dispatch(detailsContact(id,cid));}else{setName(contact.name);setNickName(contact.nickName);setPhone(contact.phone);setEmail(contact.email);setJob(contact.job);setCompany(contact.company);}},[dispatch,id,cid,navigate,successUpdate,contact]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateContact(id,{_id:contact._id,name:name,nickName:nickName,phone:phone,email:email,job:job,company:company}));};return/*#__PURE__*/_jsxs(PageWrapper,{children:[loadingUpdate&&/*#__PURE__*/_jsx(LoadingBox,{}),/*#__PURE__*/_jsx(ContactEditForm,{onSubmit:submitHandler,children:loadingDetail?/*#__PURE__*/_jsx(LoadingBox,{}):errorDetail?/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:errorDetail}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:contact.name}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nickName\",children:\"Nickname: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"nickName\",value:nickName,onChange:function onChange(e){return setNickName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phone\",children:\"Phone: \"}),/*#__PURE__*/_jsx(PhoneInput,{phone:phone,setPhone:setPhone})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"job\",children:\"Job: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"job\",value:job,onChange:function onChange(e){return setJob(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"company\",children:\"Company: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"company\",value:company,onChange:function onChange(e){return setCompany(e.target.value);}})]}),/*#__PURE__*/_jsx(Submit,{type:\"submit\",children:\"Update\"})]})}),errorUpdate&&/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:errorUpdate})]});}","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/ContactEdit.jsx"],"names":["React","useEffect","useState","styled","useDispatch","useSelector","LoadingBox","MessageBox","detailsContact","updateContact","useNavigate","useParams","CONTACT_UPDATE_RESET","PhoneInput","PageWrapper","div","ContactEditForm","form","Submit","button","ContactEdit","dispatch","navigate","id","cid","name","setName","nickName","setNickName","phone","setPhone","email","setEmail","job","setJob","company","setCompany","contactDetails","state","loadingDetail","loading","errorDetail","error","contact","contactUpdate","loadingUpdate","errorUpdate","successUpdate","success","_id","type","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { detailsContact, updateContact } from '../actions/contactActions';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport {CONTACT_UPDATE_RESET } from '../constants/contactConstants';\r\nimport PhoneInput from '../components/PhoneInput';\r\n\r\nconst PageWrapper = styled.div`\r\n    margin-top: 2%;\r\n    color: white;\r\n`;\r\n\r\nconst ContactEditForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 0 1% 30%;\r\n    width: 40%;\r\n    border: solid black 3px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    background-color: rgb(73, 73, 77);\r\n\r\n    h1 {\r\n        text-align: center;\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 15px;\r\n        color: white;\r\n        font-size: 20px;\r\n\r\n        input {\r\n            padding: 5px;\r\n            width: 50%;\r\n            border-radius: 10px;\r\n            outline: none;\r\n            border: none;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Submit = styled.button`\r\n    width: 80%;\r\n    margin: 2% 0 0 10%;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nexport default function ContactEdit() {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const {id} = useParams();\r\n    const {cid} = useParams();\r\n\r\n    const [name, setName] = useState('');\r\n    const [nickName, setNickName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [job, setJob] = useState('');\r\n    const [company, setCompany] = useState('');\r\n\r\n    const contactDetails = useSelector(state => state.contactDetails);\r\n    const {loading: loadingDetail, error: errorDetail, contact} = contactDetails;\r\n\r\n    const contactUpdate = useSelector(state => state.contactUpdate);\r\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = contactUpdate;\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            navigate(`/contacts/${id}`)\r\n        }\r\n\r\n        if (!contact || (contact._id !== cid || successUpdate)) {\r\n            dispatch({type: CONTACT_UPDATE_RESET});\r\n            dispatch(detailsContact(id, cid));\r\n        } else {\r\n            setName(contact.name);\r\n            setNickName(contact.nickName);\r\n            setPhone(contact.phone);\r\n            setEmail(contact.email);\r\n            setJob(contact.job);\r\n            setCompany(contact.company);\r\n        }\r\n        \r\n    }, [dispatch, id, cid, navigate, successUpdate, contact]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(updateContact(id, {_id: contact._id, name, nickName, phone, email, job, company}));\r\n    }\r\n\r\n    return (\r\n        <PageWrapper>\r\n            {loadingUpdate && <LoadingBox />}\r\n            <ContactEditForm onSubmit = {submitHandler}>\r\n                {loadingDetail ? (\r\n                        <LoadingBox />\r\n                    ) : errorDetail ? (\r\n                        <MessageBox variant = 'danger'>{errorDetail}</MessageBox>\r\n                    ) :\r\n                        <>\r\n                            <h1>{contact.name}</h1>\r\n                            <div>\r\n                                <label htmlFor=\"name\">Name: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'name'\r\n                                    value = {name} \r\n                                    onChange = {(e) => setName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"nickName\">Nickname: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'nickName' \r\n                                    value = {nickName} \r\n                                    onChange = {(e) => setNickName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"phone\">Phone: </label>\r\n                                <PhoneInput phone = {phone} setPhone = {setPhone} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\">Email: </label>\r\n                                <input \r\n                                    type=\"email\" \r\n                                    id = 'email' \r\n                                    value = {email} \r\n                                    onChange = {(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"job\">Job: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'job' \r\n                                    value={job} \r\n                                    onChange = {(e) => setJob(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"company\">Company: </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id = 'company' \r\n                                    value={company} \r\n                                    onChange = {(e) => setCompany(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Submit type = 'submit'>Update</Submit>\r\n                        </>\r\n                }\r\n            </ContactEditForm>\r\n            {errorUpdate && <MessageBox variant = 'danger'>{errorUpdate}</MessageBox>}\r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}