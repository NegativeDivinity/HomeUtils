{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_CONTACT_FAIL, ADD_CONTACT_REQUEST, ADD_CONTACT_SUCCESS, CONTACT_LIST_FAIL, CONTACT_LIST_REQUEST, CONTACT_LIST_SUCCESS, DELETE_CONTACT_REQUEST, DELETE_CONTACT_SUCCESS } from \"../constants/contactConstants\";\nexport const listContact = () => async (dispatch, getState) => {\n  dispatch({\n    type: CONTACT_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get('/contact', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: CONTACT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: CONTACT_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const addContact = () => async (dispatch, getState) => {\n  dispatch({\n    type: ADD_CONTACT_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.post('/contact', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ADD_CONTACT_SUCCESS,\n      payload: data.contact\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ADD_CONTACT_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteContact = contactId => async (dispatch, getState) => {\n  dispatch({\n    type: DELETE_CONTACT_REQUEST,\n    payload: contactId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.delete('/:id', {}, {\n      header: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: DELETE_CONTACT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ADD_CONTACT_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/actions/contactAction.js"],"names":["axios","ADD_CONTACT_FAIL","ADD_CONTACT_REQUEST","ADD_CONTACT_SUCCESS","CONTACT_LIST_FAIL","CONTACT_LIST_REQUEST","CONTACT_LIST_SUCCESS","DELETE_CONTACT_REQUEST","DELETE_CONTACT_SUCCESS","listContact","dispatch","getState","type","userSignin","userInfo","data","get","headers","Authorization","token","payload","error","message","response","addContact","post","contact","deleteContact","contactId","delete","header"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { ADD_CONTACT_FAIL, ADD_CONTACT_REQUEST, ADD_CONTACT_SUCCESS, CONTACT_LIST_FAIL, CONTACT_LIST_REQUEST, CONTACT_LIST_SUCCESS, DELETE_CONTACT_REQUEST, DELETE_CONTACT_SUCCESS } from \"../constants/contactConstants\";\r\n\r\nexport const listContact = () => async(dispatch, getState) => {\r\n    dispatch({type: CONTACT_LIST_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.get('/contact', {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: CONTACT_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: CONTACT_LIST_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const addContact = () => async(dispatch, getState) => {\r\n    dispatch({type: ADD_CONTACT_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.post('/contact', {}, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: ADD_CONTACT_SUCCESS, payload: data.contact});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: ADD_CONTACT_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const deleteContact = (contactId) => async(dispatch, getState) => {\r\n    dispatch({type: DELETE_CONTACT_REQUEST, payload: contactId});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.delete('/:id', {}, {\r\n            header: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: DELETE_CONTACT_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: ADD_CONTACT_FAIL, payload: message});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}