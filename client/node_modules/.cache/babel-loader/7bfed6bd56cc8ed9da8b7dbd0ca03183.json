{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeUtils\\\\client\\\\src\\\\components\\\\Priority.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Priority(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    item\n  } = props;\n  const [button, setButton] = useState('green');\n  const time = item.itemTime;\n  const PageWrapper = styled.button`\n        border: solid black 2px;\n        margin-left: 20%;\n        border-radius: 10px;\n        background-color: ${button};\n        outline: none;\n    `;\n  const currentDay = new Date().getDate();\n\n  const getDay = () => {\n    let i = time.indexOf(',');\n    let currentDate = time.substr(0, i);\n    let dayString = currentDate.substr(currentDate.indexOf('/') + 1, currentDate.lastIndexOf('/') - 3);\n    let day = parseInt(dayString);\n    return day;\n  };\n\n  const prevDay = getDay();\n\n  const todoOccurrence = () => {\n    _s();\n\n    return useEffect(() => {\n      if (prevDay === currentDay) {\n        setButton('green');\n      } else if (prevDay + 1 === currentDay) {\n        setButton('yellow');\n      } else if (prevDay + 2 === currentDay) {\n        setButton('orange');\n      } else {\n        setButton('red');\n      }\n    }, [currentDay, prevDay]);\n  };\n\n  _s(todoOccurrence, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Priority, \"SJ0rDoPiP/aSwGUrCbfvQKalpb4=\");\n\n_c = Priority;\n\nvar _c;\n\n$RefreshReg$(_c, \"Priority\");","map":{"version":3,"sources":["C:/HomeUtils/client/src/components/Priority.js"],"names":["React","useEffect","useState","styled","Priority","props","item","button","setButton","time","itemTime","PageWrapper","currentDay","Date","getDate","getDay","i","indexOf","currentDate","substr","dayString","lastIndexOf","day","parseInt","prevDay","todoOccurrence"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA;;AAEpC,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAf;AAEA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,OAAD,CAApC;AAEA,QAAMO,IAAI,GAAGH,IAAI,CAACI,QAAlB;AAEA,QAAMC,WAAW,GAAGR,MAAM,CAACI,MAAO;AACtC;AACA;AACA;AACA,4BAA4BA,MAAO;AACnC;AACA,KANI;AAQA,QAAMK,UAAU,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAnB;;AAEA,QAAMC,MAAM,GAAG,MAAM;AACjB,QAAIC,CAAC,GAAGP,IAAI,CAACQ,OAAL,CAAa,GAAb,CAAR;AACA,QAAIC,WAAW,GAAGT,IAAI,CAACU,MAAL,CAAY,CAAZ,EAAeH,CAAf,CAAlB;AACA,QAAII,SAAS,GAAGF,WAAW,CAACC,MAAZ,CACZD,WAAW,CAACD,OAAZ,CAAoB,GAApB,IAA2B,CADf,EAEZC,WAAW,CAACG,WAAZ,CAAwB,GAAxB,IAA+B,CAFnB,CAAhB;AAIA,QAAIC,GAAG,GAAGC,QAAQ,CAACH,SAAD,CAAlB;AACA,WAAOE,GAAP;AACH,GATD;;AAWA,QAAME,OAAO,GAAGT,MAAM,EAAtB;;AAEA,QAAMU,cAAc,GAAG;AAAA;;AAAA,WAEvBxB,SAAS,CAAC,MAAM;AACZ,UAAIuB,OAAO,KAAKZ,UAAhB,EAA4B;AACxBJ,QAAAA,SAAS,CAAC,OAAD,CAAT;AACH,OAFD,MAEO,IAAKgB,OAAO,GAAG,CAAX,KAAkBZ,UAAtB,EAAkC;AACrCJ,QAAAA,SAAS,CAAC,QAAD,CAAT;AACH,OAFM,MAEA,IAAKgB,OAAO,GAAG,CAAX,KAAkBZ,UAAtB,EAAkC;AACrCJ,QAAAA,SAAS,CAAC,QAAD,CAAT;AACH,OAFM,MAEA;AACHA,QAAAA,SAAS,CAAC,KAAD,CAAT;AACH;AACJ,KAVQ,EAUN,CAACI,UAAD,EAAaY,OAAb,CAVM,CAFc;AAAA,GAAvB;;AA/BoC,KA+B9BC,cA/B8B;;AA6CpC,sBACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IAlDuBrB,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Priority(props) {\r\n\r\n    const {item} = props;\r\n\r\n    const [button, setButton] = useState('green');\r\n\r\n    const time = item.itemTime;\r\n\r\n    const PageWrapper = styled.button`\r\n        border: solid black 2px;\r\n        margin-left: 20%;\r\n        border-radius: 10px;\r\n        background-color: ${button};\r\n        outline: none;\r\n    `;\r\n\r\n    const currentDay = new Date().getDate()\r\n\r\n    const getDay = () => {\r\n        let i = time.indexOf(',');\r\n        let currentDate = time.substr(0, i);\r\n        let dayString = currentDate.substr(\r\n            currentDate.indexOf('/') + 1,\r\n            currentDate.lastIndexOf('/') - 3\r\n        )\r\n        let day = parseInt(dayString);\r\n        return day;\r\n    }\r\n\r\n    const prevDay = getDay();\r\n\r\n    const todoOccurrence = () => \r\n\r\n    useEffect(() => {\r\n        if (prevDay === currentDay) {\r\n            setButton('green');\r\n        } else if ((prevDay + 1) === currentDay) {\r\n            setButton('yellow');\r\n        } else if ((prevDay + 2) === currentDay) {\r\n            setButton('orange');\r\n        } else {\r\n            setButton('red');\r\n        }\r\n    }, [currentDay, prevDay]);\r\n\r\n    return (\r\n        <PageWrapper>\r\n            \r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}