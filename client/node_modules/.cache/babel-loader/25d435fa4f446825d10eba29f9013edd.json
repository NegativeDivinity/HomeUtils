{"ast":null,"code":"import axios from 'axios';\nimport { TODO_LIST_FAIL, TODO_LIST_REQUEST, TODO_LIST_SUCCESS, TODO_DETAILS_REQUEST, TODO_DETAILS_SUCCESS, TODO_ADD_REQUEST, TODO_ADD_SUCCESS, TODO_DETAILS_FAIL, TODO_ADD_FAIL } from '../constants/todoConstants';\nexport const listTodo = () => async (dispatch, getState) => {\n  dispatch({\n    type: TODO_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get('/grouptodo', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: TODO_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TODO_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const addItem = () => async (dispatch, getState) => {\n  dispatch({\n    type: TODO_ADD_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.post('/grouptodo', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: TODO_ADD_SUCCESS,\n      payload: data.item\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TODO_ADD_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsItem = item => async (dispatch, getState) => {\n  dispatch({\n    type: TODO_DETAILS_REQUEST,\n    payload: item\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/grouptodo/${item._id}`, item, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: TODO_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TODO_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/actions/todoActions.js"],"names":["axios","TODO_LIST_FAIL","TODO_LIST_REQUEST","TODO_LIST_SUCCESS","TODO_DETAILS_REQUEST","TODO_DETAILS_SUCCESS","TODO_ADD_REQUEST","TODO_ADD_SUCCESS","TODO_DETAILS_FAIL","TODO_ADD_FAIL","listTodo","dispatch","getState","type","userSignin","userInfo","data","get","headers","Authorization","token","payload","error","message","response","addItem","post","item","detailsItem","_id"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { TODO_LIST_FAIL, TODO_LIST_REQUEST, TODO_LIST_SUCCESS, TODO_DETAILS_REQUEST, TODO_DETAILS_SUCCESS, TODO_ADD_REQUEST, TODO_ADD_SUCCESS, TODO_DETAILS_FAIL, TODO_ADD_FAIL } from '../constants/todoConstants';\r\n\r\nexport const listTodo = () => async(dispatch, getState) => {\r\n    dispatch({type: TODO_LIST_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.get('/grouptodo', {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: TODO_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: TODO_LIST_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const addItem = () => async(dispatch, getState) => {\r\n    dispatch({type: TODO_ADD_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.post('/grouptodo', {}, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: TODO_ADD_SUCCESS, payload: data.item});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: TODO_ADD_FAIL, payload: message});\r\n    }\r\n}\r\n\r\nexport const detailsItem = (item) => async(dispatch, getState) => {\r\n    dispatch({type: TODO_DETAILS_REQUEST, payload: item});\r\n    const {userSignin: {userInfo}} = getState();\r\n\r\n    try {\r\n        const {data} = await axios.get(`/grouptodo/${item._id}`, item, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: TODO_DETAILS_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: TODO_DETAILS_FAIL, payload: message});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}