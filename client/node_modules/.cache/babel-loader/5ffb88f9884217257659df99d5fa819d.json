{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skele\\\\Documents\\\\GitHub\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\GroupToDoEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router';\nimport styled from 'styled-components';\nimport { detailsItem } from '../actions/todoActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.form`\n    display: flex;\n    flex-direction: column;\n    margin: 2% 0 1% 30%;\n    color: white;\n    width: 40%;\n    border: solid black 3px;\n    padding: 10px;\n    border-radius: 10px;\n    background-color: rgb(73, 73, 77);\n\n    h1 {\n        text-align: center;\n    }\n\n    div {\n        display: flex;\n        justify-content: space-between;\n        padding: 15px;\n        color: white;\n        font-size: 20px;\n\n        input {\n            padding: 5px;\n            width: 50%;\n            border-radius: 10px;\n            outline: none;\n            border: none;\n        }\n    }\n`;\n_c = PageWrapper;\nconst Submit = styled.button`\n    width: 80%;\n    margin: 2% 0 0 10%;\n    border-radius: 10px;\n    padding: 10px;\n    cursor: pointer;\n\n    &:hover {\n        opacity: 0.7;\n    }\n`;\n_c2 = Submit;\nexport default function GroupToDoEdit() {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const itemDetails = useSelector(state => state.itemDetails);\n  const {\n    loading,\n    error,\n    item\n  } = itemDetails;\n  useEffect(() => {\n    dispatch(detailsItem(id));\n  }, [dispatch, id]);\n\n  const autoFill = e => {\n    e.preventDefault();\n    let datetime = new Date().toLocaleString();\n    setDate(datetime);\n  };\n\n  const submitHandler = e => {};\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    onSubmit: submitHandler,\n    children: [loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Done Last: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"date\",\n          placeholder: \"MM/DD/YYYY H:M:S AM/PM\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Submit, {\n        onClick: autoFill,\n        children: \"Autofill Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Submit, {\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GroupToDoEdit, \"VZk+amPn6kJt9kS4hZ52+EVW53Q=\", false, function () {\n  return [useParams, useDispatch, useNavigate, useSelector];\n});\n\n_c3 = GroupToDoEdit;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"Submit\");\n$RefreshReg$(_c3, \"GroupToDoEdit\");","map":{"version":3,"sources":["C:/Users/Skele/Documents/GitHub/HomeUtils/client/src/pages/GroupToDoEdit.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","useParams","styled","detailsItem","LoadingBox","MessageBox","PageWrapper","form","Submit","button","GroupToDoEdit","title","setTitle","date","setDate","id","dispatch","navigate","itemDetails","state","loading","error","item","autoFill","e","preventDefault","datetime","Date","toLocaleString","submitHandler","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport { detailsItem } from '../actions/todoActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nconst PageWrapper = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 2% 0 1% 30%;\r\n    color: white;\r\n    width: 40%;\r\n    border: solid black 3px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    background-color: rgb(73, 73, 77);\r\n\r\n    h1 {\r\n        text-align: center;\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 15px;\r\n        color: white;\r\n        font-size: 20px;\r\n\r\n        input {\r\n            padding: 5px;\r\n            width: 50%;\r\n            border-radius: 10px;\r\n            outline: none;\r\n            border: none;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Submit = styled.button`\r\n    width: 80%;\r\n    margin: 2% 0 0 10%;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nexport default function GroupToDoEdit() {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [date, setDate] = useState('');\r\n\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const itemDetails = useSelector(state => state.itemDetails);\r\n    const {loading, error, item} = itemDetails;\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsItem(id));\r\n    }, [dispatch, id])\r\n\r\n    const autoFill = (e) => {\r\n        e.preventDefault();\r\n\r\n        let datetime = new Date().toLocaleString();\r\n        setDate(datetime);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <PageWrapper onSubmit = {submitHandler}>\r\n            {loading ? (\r\n                <LoadingBox />\r\n            ) : error ? (\r\n                <MessageBox variant = 'danger'>{error}</MessageBox>\r\n            ) : (\r\n                <>\r\n                    <h1>{item.title}</h1>\r\n                    <div>\r\n                        <label htmlFor=\"title\">Title: </label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id = 'title'\r\n                            value = {title}\r\n                            onChange = {(e) => setTitle(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"date\">Done Last: </label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id = 'date'\r\n                            placeholder = 'MM/DD/YYYY H:M:S AM/PM'\r\n                            value = {date}\r\n                            onChange = {(e) => setDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Submit onClick = {autoFill}>Autofill Date</Submit>\r\n                </>\r\n            )}\r\n            <Submit type = 'submit'>Update</Submit>\r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}