{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { detailsUser, updateUser } from \"../actions/userActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { USER_DETAILS_UPDATE_RESET } from \"../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.div`\n    text-align: center;\n    margin-top: 2%;\n    \n    h1 {\n        font-size: 40px;\n        color: white;\n    }\n`;\n_c = PageWrapper;\nconst ProfileForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    margin: 0 0 0 30%;\n    width: 40%;\n    border: solid black 3px;\n    padding: 10px;\n    border-radius: 10px;\n    \n\n    div {\n        display: flex;\n        justify-content: space-between;\n        padding: 15px;\n        color: white;\n        font-size: 20px;\n\n        input {\n            padding: 5px;\n            width: 50%;\n            border-radius: 10px;\n            outline: none;\n            border: none;\n        }\n    }\n`;\n_c2 = ProfileForm;\nconst Submit = styled.button`\n    width: 80%;\n    margin: 2% 0 0 10%;\n    border-radius: 10px;\n    padding: 10px;\n    cursor: pointer;\n\n    &:hover {\n        opacity: 0.7;\n    }\n`;\n_c3 = Submit;\nconst Notify = styled.div`\n    width: 40%;\n    margin-left: 31%;\n`;\n_c4 = Notify;\nexport default function Profile() {\n  _s();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate;\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch({\n        type: USER_DETAILS_UPDATE_RESET\n      });\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      setFirstName(user.firstName);\n      setLastName(user.lastName);\n      setUserName(user.userName);\n      setEmail(user.email);\n    }\n  }, [dispatch, userInfo._id, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Passwords do not match!');\n    } else {\n      dispatch(updateUser({\n        userId: user._id,\n        firstName,\n        lastName,\n        userName,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Notify, {\n      children: [errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }, this), successUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"success\",\n        children: \"Profile Updated Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProfileForm, {\n      onSubmit: submitHandler,\n      children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 23\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstName\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastName\",\n            value: lastName,\n            onChange: e => setLastName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"userName\",\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"userName\",\n            value: userName,\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"New Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Submit, {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, 'profilePage', true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"7OfKpuMdZ+b3hPR1EZEocApNKVM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c5 = Profile;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"ProfileForm\");\n$RefreshReg$(_c3, \"Submit\");\n$RefreshReg$(_c4, \"Notify\");\n$RefreshReg$(_c5, \"Profile\");","map":{"version":3,"sources":["C:/HomeUtils/client/src/pages/Profile.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","styled","detailsUser","updateUser","LoadingBox","MessageBox","USER_DETAILS_UPDATE_RESET","PageWrapper","div","ProfileForm","form","Submit","button","Notify","Profile","userSignin","state","userInfo","userDetails","loading","error","user","userUpdate","loadingUpdate","errorUpdate","success","successUpdate","firstName","setFirstName","lastName","setLastName","userName","setUserName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","dispatch","type","_id","submitHandler","e","preventDefault","alert","userId","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { detailsUser, updateUser } from \"../actions/userActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { USER_DETAILS_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst PageWrapper = styled.div`\r\n    text-align: center;\r\n    margin-top: 2%;\r\n    \r\n    h1 {\r\n        font-size: 40px;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst ProfileForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 0 0 30%;\r\n    width: 40%;\r\n    border: solid black 3px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    \r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 15px;\r\n        color: white;\r\n        font-size: 20px;\r\n\r\n        input {\r\n            padding: 5px;\r\n            width: 50%;\r\n            border-radius: 10px;\r\n            outline: none;\r\n            border: none;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Submit = styled.button`\r\n    width: 80%;\r\n    margin: 2% 0 0 10%;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst Notify = styled.div`\r\n    width: 40%;\r\n    margin-left: 31%;\r\n`;\r\n\r\nexport default function Profile() {\r\n    \r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const {loading, error, user} = userDetails;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = userUpdate;\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            dispatch({type: USER_DETAILS_UPDATE_RESET});\r\n            dispatch(detailsUser(userInfo._id));\r\n        } else {\r\n            setFirstName(user.firstName);\r\n            setLastName(user.lastName);\r\n            setUserName(user.userName);\r\n            setEmail(user.email);\r\n        }\r\n    }, [dispatch, userInfo._id, user]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            alert('Passwords do not match!')\r\n        } else {\r\n            dispatch(updateUser({userId: user._id, firstName, lastName, userName, email, password}));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PageWrapper key = 'profilePage'>\r\n            <h1>Profile</h1>\r\n            <Notify>\r\n                {errorUpdate && <MessageBox variant = 'danger'>{errorUpdate}</MessageBox>}\r\n                {successUpdate && <MessageBox variant = 'success'>Profile Updated Successfully</MessageBox>}\r\n            </Notify>\r\n            <ProfileForm onSubmit = {submitHandler}>\r\n                {loading ? \r\n                    ( <LoadingBox /> ) : \r\n                    error ? (<MessageBox variant = 'danger'>{error}</MessageBox>\r\n                    ) : (\r\n                    \r\n                    <React.Fragment>\r\n                        {loadingUpdate && <LoadingBox />}\r\n                        <div>\r\n                            <label htmlFor=\"firstName\">First Name: </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id = 'firstName'\r\n                                value = {firstName} \r\n                                onChange = {(e) => setFirstName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"lastName\">Last Name: </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id = 'lastName' \r\n                                value = {lastName} \r\n                                onChange = {(e) => setLastName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"userName\">Username: </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id = 'userName' \r\n                                value = {userName} \r\n                                onChange = {(e) => setUserName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"email\">Email: </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id = 'email' \r\n                                value = {email} \r\n                                onChange = {(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"password\">New Password: </label>\r\n                            <input \r\n                                type=\"password\" \r\n                                id = 'password' \r\n                                value={password} \r\n                                onChange = {(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"confirmPassword\">Confirm Password: </label>\r\n                            <input \r\n                                type=\"password\" \r\n                                id = 'confirmPassword' \r\n                                value={confirmPassword} \r\n                                onChange = {(e) => setConfirmPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <Submit type = 'submit'>Update</Submit>\r\n                    </React.Fragment>\r\n                )}\r\n            </ProfileForm>\r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}