{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeUtils\\\\client\\\\src\\\\pages\\\\GroupToDo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { RiAddLine } from 'react-icons/ri';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { addItem, deleteItem, listTodo, updateItemTime } from '../actions/todoActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport TodoItemCard from '../components/todoItemCard';\nimport { GiCheckMark } from 'react-icons/gi';\nimport { TODO_ADD_RESET, TODO_DELETE_RESET, TODO_UPDATE_TIME_RESET } from '../constants/todoConstants';\nimport { useNavigate } from 'react-router';\nimport { FaTrash } from 'react-icons/fa';\nimport Priority from '../components/Priority';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    margin-top: 2%;\n\n    h1 {\n        font-size: 40px;\n        color: white;\n    }\n    \n`;\n_c = PageWrapper;\nconst Add = styled.button`\n    width: 10%;\n    margin: 0 0 1% 20%;\n    border: solid black 2px;\n    border-radius: 10px;\n    cursor: pointer;\n    outline: none;\n    background-color: green;\n    padding: 5px;\n\n    &:hover .add {\n        transform: scale(1.1);\n        transition: transform ease-in-out 1s;\n    }\n`;\n_c2 = Add;\nconst ItemRow = styled.div`\n    display: flex;\n    margin-bottom: 2%;\n`;\n_c3 = ItemRow;\nconst Done = styled.button`\n    margin-left: 20px;\n    border: solid black 2px;\n    border-radius: 10px;\n    background-color: green;\n    cursor: pointer;\n    outline: none;\n`;\n_c4 = Done;\nconst Delete = styled.button`\n    margin-left: 20px;\n    border: solid black 2px;\n    border-radius: 10px;\n    background-color: red;\n    cursor: pointer;\n    outline: none;\n`;\n_c5 = Delete;\nexport default function GroupToDo() {\n  _s();\n\n  const todoList = useSelector(state => state.todoList);\n  const {\n    loading,\n    error,\n    items\n  } = todoList;\n  const itemAdd = useSelector(state => state.itemAdd);\n  const {\n    success: successCreate,\n    item: createdItem\n  } = itemAdd;\n  const itemDelete = useSelector(state => state.itemDelete);\n  const {\n    success: successDelete\n  } = itemDelete;\n  const itemTimeUpdate = useSelector(state => state.itemTimeUpdate);\n  const {\n    loading: loadingTime,\n    error: errorTime,\n    success: successTime\n  } = itemTimeUpdate;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (successCreate) {\n      dispatch({\n        type: TODO_ADD_RESET\n      });\n      navigate(`/grouptodo/${createdItem._id}/edit`);\n    }\n\n    if (successDelete) {\n      dispatch({\n        type: TODO_DELETE_RESET\n      });\n    }\n\n    if (successTime) {\n      dispatch({\n        type: TODO_UPDATE_TIME_RESET\n      });\n      dispatch(listTodo());\n    }\n\n    dispatch(listTodo());\n  }, [dispatch, navigate, successCreate, successDelete, createdItem, successTime]);\n\n  const addHandler = () => {\n    dispatch(addItem());\n  };\n\n  const deleteHandler = item => {\n    dispatch(deleteItem(item._id));\n  };\n\n  const updateTimeHandler = item => {\n    dispatch(updateItemTime(item));\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Group To-Do-List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Add, {\n      onClick: addHandler,\n      children: /*#__PURE__*/_jsxDEV(RiAddLine, {\n        className: \"add\",\n        fontSize: \"40px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(ItemRow, {\n        children: [/*#__PURE__*/_jsxDEV(Priority, {\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TodoItemCard, {\n          item: item,\n          time: item.itemTime\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Done, {\n          onClick: () => updateTimeHandler(item),\n          children: /*#__PURE__*/_jsxDEV(GiCheckMark, {\n            fontSize: \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Delete, {\n          onClick: () => deleteHandler(item),\n          children: /*#__PURE__*/_jsxDEV(FaTrash, {\n            fontSize: \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 75\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }, this))\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GroupToDo, \"t62VeT9MUwVla5BZt+Zoklo99Bg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch, useNavigate];\n});\n\n_c6 = GroupToDo;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"Add\");\n$RefreshReg$(_c3, \"ItemRow\");\n$RefreshReg$(_c4, \"Done\");\n$RefreshReg$(_c5, \"Delete\");\n$RefreshReg$(_c6, \"GroupToDo\");","map":{"version":3,"sources":["C:/HomeUtils/client/src/pages/GroupToDo.jsx"],"names":["React","useEffect","RiAddLine","useDispatch","useSelector","styled","addItem","deleteItem","listTodo","updateItemTime","LoadingBox","MessageBox","TodoItemCard","GiCheckMark","TODO_ADD_RESET","TODO_DELETE_RESET","TODO_UPDATE_TIME_RESET","useNavigate","FaTrash","Priority","PageWrapper","div","Add","button","ItemRow","Done","Delete","GroupToDo","todoList","state","loading","error","items","itemAdd","success","successCreate","item","createdItem","itemDelete","successDelete","itemTimeUpdate","loadingTime","errorTime","successTime","dispatch","navigate","type","_id","addHandler","deleteHandler","updateTimeHandler","map","itemTime"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { RiAddLine } from 'react-icons/ri';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { addItem, deleteItem, listTodo, updateItemTime } from '../actions/todoActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport TodoItemCard from '../components/todoItemCard';\r\nimport { GiCheckMark } from 'react-icons/gi';\r\nimport { TODO_ADD_RESET, TODO_DELETE_RESET, TODO_UPDATE_TIME_RESET } from '../constants/todoConstants';\r\nimport { useNavigate } from 'react-router';\r\nimport { FaTrash } from 'react-icons/fa';\r\nimport Priority from '../components/Priority';\r\n\r\nconst PageWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    margin-top: 2%;\r\n\r\n    h1 {\r\n        font-size: 40px;\r\n        color: white;\r\n    }\r\n    \r\n`;\r\n\r\nconst Add = styled.button`\r\n    width: 10%;\r\n    margin: 0 0 1% 20%;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: green;\r\n    padding: 5px;\r\n\r\n    &:hover .add {\r\n        transform: scale(1.1);\r\n        transition: transform ease-in-out 1s;\r\n    }\r\n`;\r\n\r\nconst ItemRow = styled.div`\r\n    display: flex;\r\n    margin-bottom: 2%;\r\n`;\r\n\r\nconst Done = styled.button`\r\n    margin-left: 20px;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    background-color: green;\r\n    cursor: pointer;\r\n    outline: none;\r\n`;\r\n\r\nconst Delete = styled.button`\r\n    margin-left: 20px;\r\n    border: solid black 2px;\r\n    border-radius: 10px;\r\n    background-color: red;\r\n    cursor: pointer;\r\n    outline: none;\r\n`;\r\n\r\nexport default function GroupToDo() {\r\n\r\n    const todoList = useSelector(state => state.todoList);\r\n    const {loading, error, items} = todoList;\r\n\r\n    const itemAdd = useSelector(state => state.itemAdd);\r\n    const {success: successCreate, item: createdItem} = itemAdd;\r\n\r\n    const itemDelete = useSelector(state => state.itemDelete);\r\n    const {success: successDelete} = itemDelete;\r\n\r\n    const itemTimeUpdate = useSelector(state => state.itemTimeUpdate);\r\n    const {loading: loadingTime, error: errorTime, success: successTime} = itemTimeUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n\r\n        if (successCreate) {\r\n            dispatch({type: TODO_ADD_RESET});\r\n            navigate(`/grouptodo/${createdItem._id}/edit`);\r\n        }\r\n\r\n        if (successDelete) {\r\n            dispatch({type: TODO_DELETE_RESET});\r\n        }\r\n\r\n        if (successTime) {\r\n            dispatch({type: TODO_UPDATE_TIME_RESET});\r\n            dispatch(listTodo());\r\n        }\r\n\r\n        dispatch(listTodo());\r\n    }, [dispatch, navigate, successCreate, successDelete, createdItem, successTime])\r\n\r\n    const addHandler = () => {\r\n        dispatch(addItem())\r\n    }\r\n\r\n    const deleteHandler = (item) => {\r\n        dispatch(deleteItem(item._id));\r\n    }\r\n\r\n    const updateTimeHandler = (item) => {\r\n        dispatch(updateItemTime(item));\r\n    }\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <h1>Group To-Do-List</h1>\r\n            <Add onClick = {addHandler}><RiAddLine className = 'add' fontSize = '40px'/></Add>\r\n            {loading ? (\r\n                <LoadingBox />\r\n            ) : error ? (\r\n                <MessageBox variant = 'danger'></MessageBox>\r\n            ) : (\r\n                <>\r\n                    {items.map((item) => (\r\n                        <ItemRow>\r\n                            <Priority item = {item} />\r\n                            <TodoItemCard key = {item._id} item = {item} time = {item.itemTime} />\r\n                            <Done onClick = {() => updateTimeHandler(item)}><GiCheckMark fontSize = '30px' /></Done>\r\n                            <Delete onClick = {() => deleteHandler(item)}><FaTrash fontSize = '30px' /></Delete>\r\n                        </ItemRow>\r\n                    ))}\r\n                </>\r\n            )}\r\n        </PageWrapper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}